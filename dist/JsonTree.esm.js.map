{"mappings":";;;AAAA;;;;CAIC,GACD,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC;;ACRA;;;;CAIC,GACD,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC;;ACRA;;;;CAIC,GACD,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC;;ACRA;;;;CAIC,GAED,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAGzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAGzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC;;;;CAIC,GACD,SAAS,0CAAc,GAAG,EAAE;IACxB,IAAI,QAAQ,IAAI,IAAI,OAAO,QAAQ,YAAY,CAAC,MAAM,OAAO,CAAC,QAC1D,OAAO,GAAG,CAAC,OAAO,QAAQ,CAAC,KAAK,YAChC,OAAO;IAEX,OAAO,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG;AACxD;AAEA;;;;;CAKC,GACD,SAAS,0CAAsB,QAAQ,EAAE,QAAQ,EAAE;IAC/C,MAAM,UAAU,0CAAc;IAC9B,MAAM,UAAU,0CAAc;IAC9B,OAAQ,AAAC,CAAA,YAAY,cAAc,YAAY,UAAS,KAAM,YAAY;AAC9E;;;AC3CA;;;;CAIC,GAED,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,MAAM,8BAAQ;AACd,MAAM,4BAAM;IAEZ,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,2CAAe;SACX;WACA;AACJ;;;AClCA;;;;;;CAMC,GACD,AAAO,MAAM,4CAAgB,CAAC,UAAY,CAAC,WAAa;QACpD,IAAI,OAAO,MAAM,CAAC,SAAS,SAAS,GAAG,GACnC,OAAO,CAAC,SAAS,GAAG,CAAC;IAE7B;;;AHGA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,aAAa;AACb,MAAM,kCAAY;IACd,MAAM,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACjC,OAAO,CAAA,GAAA,gBAAQ,EAAE,GAAG,CAAC,UAAU;IAC/B,eAAe,CAAA,GAAA,gBAAS,AAAD,EAAE,GAAG;IAC5B,SAAS,CAAA,GAAA,gBAAS,AAAD,EAAE,KAAK;IACxB,MAAM,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IACtB,cAAc,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC5B,mBAAmB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IACjC,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,UAAU,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IAC1B,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,mBAAmB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACpC,qBAAqB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACtC,uBAAuB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IAChD,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,QAAQ,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACnC,qBAAqB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;AAClD;AACA,gBAAgB;AAChB,MAAM,qCAAe;IACjB,SAAS,EAAE;IACX,MAAM;IACN,mBAAmB,IAAM,QAAQ,OAAO;IACxC,iCAAmB,gCAAC,gBAAO;IAC3B,mCAAqB,gCAAC,gBAAO;IAC7B,gCAAkB,gCAAC,cAAK;AAC5B;AAEA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,MAAM,wCAAkB,CAAA,GAAA,gBAAQ;IAuB5B,0BAA0B,SAAS,EAAE;QACjC,IAAI,CAAC,QAAQ,CAAC;YACV,OAAO,UAAU,KAAK;QAC1B;IACJ;IAEA,qBAAqB;QACjB,MAAM,eAAE,YAAW,YAAE,SAAQ,QAAE,KAAI,SAAE,MAAK,WAAE,QAAO,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QACxE,MAAM,YAAE,SAAQ,YAAE,SAAQ,EAAE,GAAG,IAAI,CAAC,KAAK;QACzC,MAAM,iBAAiB,SAAS,MAAM,OAAO,SAAS,MAAM;QAE5D,IAAI,eAAe,CAAC,kBAAmB,OAAO,SAAS,KAAK,KAAK,YAC7D,SAAS,KAAK;IAEtB;IAEA,aAAa;QACT,MAAM,qBAAE,kBAAiB,iBAAE,cAAa,UAAE,OAAM,uBAAE,oBAAmB,WAAE,QAAO,EAAE,GAAG,IAAI,CAAC,KAAK;QAC7F,MAAM,YAAE,SAAQ,QAAE,KAAI,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QAE3C,MAAM,WAAW,oBAAoB,IAAI,EAAE,SAAS,MAAM,MAAM,SAAS,KAAK;QAE9E,MAAM,SAAS;YACX,OAAO;YACP,KAAK;QACT;QAEA,aAAa;QACb,kBAAkB,QAAQ,IAAI,CAAC,IAAM;YACjC,gCAAgC;YAChC,IAAI,CAAC,CAAA,GAAA,yCAAoB,EAAE,eAAe,WACtC,IAAI,CAAC,gBAAgB;QAE7B,GAAG,KAAK,CAAC,OAAO,KAAK;IACzB;IAEA,iBAAiB;QACb,IAAI,CAAC,QAAQ,CAAC;YACV,aAAa,IAAI;QACrB;IACJ;IAEA,SAAS,IAAI,EAAE;QACX,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IAC1B;IAEA,mBAAmB;QACf,IAAI,CAAC,QAAQ,CAAC;YACV,aAAa,KAAK;QACtB;IACJ;IAEA,SAAS;QACL,MAAM,QAAE,KAAI,SAAE,MAAK,eAAE,YAAW,WAAE,QAAO,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QAC9D,MAAM,gBACF,aAAY,iBACZ,cAAa,YACb,SAAQ,YACR,SAAQ,YACR,SAAQ,qBACR,kBAAiB,uBACjB,oBAAmB,yBACnB,sBAAqB,oBACrB,iBAAgB,EAChB,SAAS,gBAAe,EACvB,GAAG,IAAI,CAAC,KAAK;QAElB,MAAM,UAAU;YACZ,QAAQ,IAAI,CAAC,gBAAgB;YAC7B,OAAO,IAAI,CAAC,UAAU;QAC1B;QAEA,MAAM,QAAQ,SAAS,MAAM,eAAe,SAAS,MAAM;QAC3D,IAAI,SAAS,IAAI;QACjB,IAAI,eAAe,IAAI;QACvB,MAAM,iBAAiB,SAAS,MAAM,eAAe,SAAS,MAAM;QAEpE,IAAI,eAAe,CAAC,gBAAgB;YAChC,MAAM,eACF,sBAAsB,CAAA,GAAA,wCAAc,EAAE,KAAK,EAAE,iBAAiB,MAAM,MAAM,eAAe;YAE7F,MAAM,wCAA0B,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,mBAAmB;gBAClE,SAAS,IAAI,CAAC,UAAU;YAC5B;YACA,MAAM,0CAA4B,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,qBAAqB;gBACtE,SAAS,IAAI,CAAC,gBAAgB;YAClC;YACA,MAAM,mCAAqB,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,cAAc;gBACxD,KAAK,IAAI,CAAC,QAAQ;gBAClB,cAAc;gBACd,SAAS,CAAA,GAAA,yCAAY,EAAE;YAC3B;YAEA,uBAAU,gCAAC;gBAAK,WAAU;gBAAiB,OAAO,MAAM,QAAQ;eAC3D,oBAAmB,KAAE,2BAA2B;YAErD,eAAe,IAAI;QACvB,OAAO;YACH,0DAA0D,GAC1D,uBACI,gCAAC;gBAAK,WAAU;gBAAa,OAAO,MAAM,KAAK;gBAAE,SAAS,iBAAiB,IAAI,GAAG,IAAI,CAAC,cAAc;eAChG;YAGT,iBAAiB,GACjB,MAAM,gCAAkB,CAAA,GAAA,YAAI,EAAE,YAAY,CAAC,kBAAkB;gBACzD,SAAS;gBACT,WAAW;gBACX,OAAO,MAAM,KAAK;YACtB;YACA,eAAe,AAAC,iBAAkB,IAAI,GAAG,eAAe;QAC5D,CAAC;QAED,qBACI,gCAAC;YAAG,WAAU;YAAkB,OAAO,MAAM,EAAE;yBAC3C,gCAAC;YAAK,WAAU;YAAY,OAAO,MAAM,IAAI;WAAG,MAAK,OAAU,QAC9D;IAGb;IA7IA,YAAY,KAAK,CAAE;QACf,KAAK,CAAC;QACN,MAAM,UAAU;eACT,MAAM,OAAO;YAChB,MAAM,IAAI;SACb;QACD,IAAI,CAAC,KAAK,GAAG;YACT,OAAO,MAAM,KAAK;YAClB,MAAM,MAAM,IAAI;qBAChB;YACA,MAAM,MAAM,IAAI;YAChB,aAAa,KAAK;YAClB,UAAU,IAAI;QAClB;QAEA,OAAO;QACP,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;QACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI;IAC/C;AA0HJ;AAEA,iBAAiB;AACjB,gCAAU,SAAS,GAAG;AACtB,oBAAoB;AACpB,gCAAU,YAAY,GAAG;IAEzB,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,2CAAe;;;AI1Mf;;;;CAIC,GACD,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC;;;ACRA;;;;CAIC,GACD,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC;;;;AAKA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,aAAa;AACb,MAAM,kCAAY;IACd,WAAW,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACpC,cAAc,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACvC,WAAW,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IACzB,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,qBAAqB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACtC,uBAAuB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IAChD,SAAS,CAAA,GAAA,gBAAS,AAAD,EAAE,KAAK;IACxB,MAAM,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IACtB,qBAAqB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;AAClD;AACA,gBAAgB;AAChB,MAAM,qCAAe;IACjB,WAAW,KAAK;IAChB,gCAAkB,gCAAC,gBAAO;IAC1B,mCAAqB,gCAAC,gBAAO;AACjC;AAEA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,MAAM,2CAAqB,CAAA,GAAA,gBAAQ;IAa/B,oBAAoB;QAChB,MAAM,eAAE,YAAW,iBAAE,cAAa,EAAE,GAAG,IAAI,CAAC,KAAK;QACjD,MAAM,aAAE,UAAS,EAAE,GAAG,IAAI,CAAC,KAAK;QAEhC,IAAI,eAAgB,OAAO,YAAY,KAAK,KAAK,YAC7C,YAAY,KAAK;QAGrB,IAAI,aAAa,iBAAkB,OAAO,cAAc,KAAK,KAAK,YAC9D,cAAc,KAAK;IAE3B;IAEA,WAAW;QACP,MAAM,aAAE,UAAS,aAAE,UAAS,uBAAE,oBAAmB,WAAE,QAAO,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QAC/E,MAAM,eAAE,YAAW,iBAAE,cAAa,EAAE,GAAG,IAAI,CAAC,KAAK;QACjD,MAAM,SAAS,CAAC;QAChB,2BAA2B;QAC3B,IAAI,CAAC,WAAW;YACZ,4BAA4B;YAC5B,IAAI,CAAC,YAAY,KAAK,EAClB,8BAA8B;YAC9B;YAGJ,OAAO,GAAG,GAAG,YAAY,KAAK;QAClC,CAAC;QACD,OAAO,QAAQ,GAAG,oBAAoB,KAAK,EAAE,SAAS,MAAM,OAAO,GAAG,EAAE,cAAc,KAAK;QAC3F,UAAU;IACd;IAEA,YAAY,IAAI,EAAE;QACd,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG;IAC7B;IAEA,cAAc,IAAI,EAAE;QAChB,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG;IAC/B;IAEA,SAAS;QACL,MAAM,gBACF,aAAY,aACZ,UAAS,oBACT,iBAAgB,uBAChB,oBAAmB,yBACnB,sBAAqB,WACrB,QAAO,QACP,KAAI,EACP,GAAG,IAAI,CAAC,KAAK;QAEd,MAAM,UAAU;YACZ,QAAQ;YACR,OAAO,IAAI,CAAC,QAAQ;QACxB;QAEA,MAAM,uCAAyB,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,kBAAkB;YAChE,SAAS,IAAI,CAAC,QAAQ;QAC1B;QACA,MAAM,0CAA4B,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,qBAAqB;YACtE,SAAS;QACb;QACA,MAAM,oBAAoB,sBAAsB,CAAA,GAAA,wCAAe,AAAD,EAAE,KAAK,EAAE,SAAS;QAChF,MAAM,wCAA0B,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,mBAAmB;YAClE,aAAa;YACb,KAAK,IAAI,CAAC,aAAa;YACvB,SAAS,CAAA,GAAA,yCAAY,EAAE;QAC3B;QACA,IAAI,wBAAwB,IAAI;QAChC,IAAI,mBAAmB,IAAI;QAE3B,IAAI,CAAC,WAAW;YACZ,MAAM,kBAAkB,sBAAsB,CAAA,GAAA,wCAAe,AAAD,EAAE,GAAG,EAAE,SAAS;YAC5E,sCAAwB,CAAA,GAAA,YAAI,EAAE,YAAY,CAAC,iBAAiB;gBACxD,aAAa;gBACb,KAAK,IAAI,CAAC,WAAW;gBACrB,SAAS,CAAA,GAAA,yCAAY,EAAE;YAC3B;YACA,mBAAmB;QACvB,CAAC;QAED,qBACI,gCAAC;YAAK,WAAU;WACX,uBAAsB,KAAE,kBAAiB,KAAE,yBAAwB,KAAE,2BACrE;IAGb;IAlGA,YAAY,KAAK,CAAE;QACf,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YACT,aAAa,IAAI;YACjB,eAAe,IAAI;QACvB;QACA,OAAO;QACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI;QAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;IAC3C;AAyFJ;AAEA,iBAAiB;AACjB,mCAAa,SAAS,GAAG;AACzB,oBAAoB;AACpB,mCAAa,YAAY,GAAG;IAE5B,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,2CAAe;;;;ACpJf;;;;CAIC,GAED,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAGzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,MAAM,4CAAiB;AACvB,MAAM,2CAAoB;AAC1B,MAAM,4CAAoB;;;AFD1B,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,aAAa;AACb,MAAM,kCAAY;IACd,MAAM,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACjC,MAAM,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACjC,aAAa,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACtC,SAAS,CAAA,GAAA,gBAAS,AAAD,EAAE,KAAK;IACxB,MAAM,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IACtB,cAAc,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC5B,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,eAAe,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACxC,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,UAAU,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IAC1B,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,qBAAqB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACtC,mBAAmB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACpC,uBAAuB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IAChD,0BAA0B,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnD,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,iBAAiB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IAClC,oBAAoB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAClC,iBAAiB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC/B,oBAAoB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAClC,QAAQ,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACnC,qBAAqB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;AAClD;AACA,gBAAgB;AAChB,MAAM,qCAAe;IACjB,SAAS,EAAE;IACX,MAAM;IACN,gCAAkB,gCAAC,cAAK;IACxB,+BAAiB,gCAAC,cAAK;AAC3B;AAEA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,MAAM,yCAAmB,CAAA,GAAA,gBAAQ;IA6B7B,0BAA0B,SAAS,EAAE;QACjC,IAAI,CAAC,QAAQ,CAAC;YACV,MAAM,UAAU,IAAI;QACxB;IACJ;IAEA,cAAc,QAAQ,EAAE,SAAS,EAAE;QAC/B,MAAM,QAAE,KAAI,WAAE,QAAO,EAAE,GAAG,IAAI,CAAC,KAAK;QACpC,cAAc;QACd,IAAI,CAAC,SAAS,GAAG;QACjB,eAAe;QACf,IAAI,CAAC,QAAQ,CAAC;kBACV;QACJ;QACA,SAAS;QACT,MAAM,YAAE,SAAQ,EAAE,GAAG,IAAI,CAAC,KAAK;QAC/B,MAAM,OAAO,QAAQ,MAAM;QAC3B,SAAS,OAAO,CAAC,OAAO,EAAE,EAAE;IAChC;IAEA,gBAAgB;QACZ,IAAI,CAAC,QAAQ,CAAC;YACV,gBAAgB,IAAI;QACxB;IACJ;IAEA,uBAAuB;QACnB,IAAI,CAAC,QAAQ,CAAC;YACV,gBAAgB,KAAK;QACzB;IACJ;IAEA,kBAAkB,OAAE,IAAG,YAAE,SAAQ,EAAE,EAAE;QACjC,MAAM,QAAE,KAAI,WAAE,QAAO,EAAE,UAAU,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QACpD,MAAM,mBAAE,gBAAe,UAAE,OAAM,EAAE,GAAG,IAAI,CAAC,KAAK;QAE9C,gBAAgB,KAAK,SAAS,MAAM,UAAU,IAAI,CAAC,IAAM;YACrD,cAAc;YACd,IAAI,CAAC,IAAI,GAAG;YACZ,IAAI,CAAC,QAAQ,CAAC;sBACV;YACJ;YACA,sBAAsB;YACtB,IAAI,CAAC,oBAAoB;YACzB,oBAAoB;YACpB,MAAM,YAAE,SAAQ,iBAAE,cAAa,EAAE,GAAG,IAAI,CAAC,KAAK;YAC9C,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,EAAE;YACtC,sBAAsB;YACtB,cAAc;gBACV,MAAM,CAAA,GAAA,yCAAa;yBACnB;sBACA;qBACA;0BACA;YACJ;QACJ,GAAG,KAAK,CAAC,OAAO,KAAK;IACzB;IAEA,kBAAkB,GAAG,EAAE;QACnB,OAAO,IAAM;YACT,MAAM,sBAAE,mBAAkB,UAAE,OAAM,EAAE,GAAG,IAAI,CAAC,KAAK;YACjD,MAAM,QAAE,KAAI,WAAE,QAAO,EAAE,UAAU,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;YACpD,MAAM,WAAW,IAAI,CAAC,IAAI;YAC1B,uBAAuB;YACvB,mBAAmB,KAAK,SAAS,MAAM,UAAU,IAAI,CAAC,IAAM;gBACxD,MAAM,UAAU,CAAA,GAAA,yCAAY,EAAE;gBAC9B,MAAM,oBAAoB;6BACtB;0BACA;yBACA;8BACA;gBACJ;gBAEA,IAAI,YAAY,YAAY,YAAY,SAAS;oBAC7C,kBAAkB,IAAI,GAAG,CAAA,GAAA,yCAAiB,AAAD;oBACzC,kBAAkB,QAAQ,GAAG,IAAI;oBACjC,IAAI,CAAC,IAAI,GAAG,IAAI;gBACpB,OAAO;oBACH,kBAAkB,IAAI,GAAG,CAAA,GAAA,wCAAiB,AAAD;oBACzC,OAAO,IAAI,CAAC,IAAI;gBACpB,CAAC;gBACD,IAAI,CAAC,QAAQ,CAAC;0BACV;gBACJ;gBACA,oBAAoB;gBACpB,MAAM,YAAE,SAAQ,iBAAE,cAAa,EAAE,GAAG,IAAI,CAAC,KAAK;gBAC9C,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,EAAE;gBACtC,sBAAsB;gBACtB,cAAc;YAClB,GAAG,KAAK,CAAC,OAAO,KAAK;QACzB;IACJ;IAEA,qBAAqB;QACjB,IAAI,CAAC,QAAQ,CAAC;YACV,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS;QACpC;IACJ;IAEA,gBAAgB,OAAE,IAAG,SAAE,MAAK,EAAE,EAAE;QAC5B,OAAO,IAAI,QAAQ,CAAC,SAAS,SAAW;YACpC,MAAM,sBAAE,mBAAkB,EAAE,GAAG,IAAI,CAAC,KAAK;YACzC,MAAM,QAAE,KAAI,WAAE,QAAO,EAAE,UAAU,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;YAEpD,YAAY;YACZ,MAAM,WAAW,IAAI,CAAC,IAAI;YAE1B,uBAAuB;YACvB,mBAAmB,KAAK,SAAS,MAAM,UAAU,OAAO,IAAI,CAAC,IAAM;gBAC/D,eAAe;gBACf,IAAI,CAAC,IAAI,GAAG;gBACZ,YAAY;gBACZ,IAAI,CAAC,QAAQ,CAAC;0BACV;gBACJ;gBACA,oBAAoB;gBACpB,MAAM,YAAE,SAAQ,iBAAE,cAAa,EAAE,GAAG,IAAI,CAAC,KAAK;gBAC9C,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,EAAE;gBACtC,sBAAsB;gBACtB,cAAc;oBACV,MAAM,CAAA,GAAA,yCAAgB;6BACtB;0BACA;yBACA;oBACA,UAAU;8BACV;gBACJ;gBACA,UAAU;gBACV;YACJ,GAAG,KAAK,CAAC;QACb;IACJ;IAEA,kBAAkB;QACd,MAAM,QAAE,KAAI,WAAE,QAAO,QAAE,KAAI,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QAChD,MAAM,gBAAE,aAAY,YAAE,SAAQ,YAAE,SAAQ,YAAE,SAAQ,oBAAE,iBAAgB,EAAE,GAAG,IAAI,CAAC,KAAK;QAEnF,MAAM,SAAE,MAAK,aAAE,UAAS,EAAE,GAAG,SAAS,MAAM,MAAM,SAAS,MAAM;QACjE,MAAM,UAAU,OAAO,mBAAmB,CAAC;QAC3C,MAAM,gBAAgB;QACtB,MAAM,gBAAgB,QAAQ,MAAM;QACpC,MAAM,WAAW,AAAC,gBAAgB,IAAK,SAAS,KAAK;QACrD,IAAI,eAAe,IAAI;QACvB,iCAAiC;QACjC,IAAI,CAAC,SAAS,MAAM,MAAM,SAAS,MAAM,WAAW;YAChD,MAAM,gCAAkB,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,kBAAkB;gBACzD,SAAS;gBACT,WAAW;gBACX,OAAO;YACX;YACA,eAAe,AAAC,SAAS,KAAM,kBAAkB,IAAI;QACzD,CAAC;QAED,0DAA0D,GAC1D,qBAAQ,gCAAC;YAAK,WAAU;yBACpB,gCAAC;YAAK,WAAU;YAAsB,OAAO;YAAW,SAAS,IAAI,CAAC,kBAAkB;WACnF,eAAc,KAAE,eAAc,KAAE,WAEpC;IAEL,iBAAiB,GACrB;IAEA,qBAAqB;QACjB,MAAM,QAAE,KAAI,QAAE,KAAI,WAAE,QAAO,QAAE,KAAI,YAAE,SAAQ,kBAAE,eAAc,EAAE,GAAG,IAAI,CAAC,KAAK;QAC1E,MAAM,eACF,YAAW,gBACX,aAAY,iBACZ,cAAa,YACb,SAAQ,YACR,SAAQ,YACR,SAAQ,oBACR,iBAAgB,uBAChB,oBAAmB,qBACnB,kBAAiB,yBACjB,sBAAqB,4BACrB,yBAAwB,oBACxB,iBAAgB,mBAChB,gBAAe,sBACf,mBAAkB,mBAClB,gBAAe,sBACf,mBAAkB,UAClB,OAAM,uBACN,oBAAmB,EAClB,GAAG,IAAI,CAAC,KAAK;QAElB,MAAM,SAAE,MAAK,QAAE,KAAI,WAAE,QAAO,MAAE,GAAE,aAAE,UAAS,EAAE,GAAG,SAAS,MAAM,MAAM,SAAS,MAAM;QACpF,MAAM,UAAU,OAAO,mBAAmB,CAAC;QAC3C,IAAI,eAAe,IAAI;QACvB,MAAM,iBAAiB,SAAS,MAAM,MAAM,SAAS,MAAM;QAC3D,iCAAiC;QACjC,IAAI,CAAC,gBAAgB;YACjB,MAAM,gCAAkB,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,kBAAkB;gBACzD,SAAS;gBACT,WAAW;gBACX,OAAO;YACX;YACA,eAAe,AAAC,SAAS,KAAM,kBAAkB,IAAI;QACzD,CAAC;QAED,MAAM,OAAO,QACR,GAAG,CAAC,CAAA,oBAAO,gCAAC,CAAA,GAAA,wCAAO;gBAChB,KAAK;gBACL,MAAM;gBACN,MAAM,IAAI,CAAC,IAAI;gBACf,SAAS;gBACT,MAAM;gBACN,aAAa;gBACb,cAAc,IAAI,CAAC,iBAAiB,CAAC;gBACrC,mBAAmB,IAAI,CAAC,eAAe;gBACvC,UAAU,IAAI,CAAC,aAAa;gBAC5B,eAAe;gBACf,UAAU;gBACV,UAAU;gBACV,kBAAkB;gBAClB,qBAAqB;gBACrB,mBAAmB;gBACnB,uBAAuB;gBACvB,0BAA0B;gBAC1B,kBAAkB;gBAClB,iBAAiB;gBACjB,oBAAoB;gBACpB,iBAAiB;gBACjB,oBAAoB;gBACpB,QAAQ;gBACR,qBAAqB;;QAG7B,MAAM,cAAc;QACpB,MAAM,YAAY;QAElB,IAAI,OAAO,IAAI;QACf,iCAAiC;QACjC,IAAI,CAAC,gBAAgB;YACjB,MAAM,+BAAiB,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,iBAAiB;gBACvD,SAAS,IAAI,CAAC,aAAa;gBAC3B,WAAW;gBACX,OAAO;YACX;YACA,OAAO,+BACF,gCAAC;gBAAK,WAAU;gBAAgB,OAAO;6BAAS,gCAAC,CAAA,GAAA,wCAAW;gBACzD,WAAW,IAAI,CAAC,iBAAiB;gBACjC,cAAc,IAAI,CAAC,oBAAoB;gBACvC,kBAAkB;gBAClB,qBAAqB;gBACrB,uBAAuB;gBACvB,SAAS;gBACT,MAAM;gBACN,qBAAqB;gCAExB,gCAAC,cACG,gBAAe,KAAE,aACd;QAChB,CAAC;QAED,qBAAQ,gCAAC;YAAK,WAAU;yBACpB,gCAAC;YAAK,WAAU;YAA+B,OAAO;WAAY,4BAClE,gCAAC;YAAG,WAAU;YAA0B,OAAO;WAC1C,qBAEL,gCAAC;YAAK,WAAU;YAA+B,OAAO;WAAY,YACjE;IAET;IAEA,SAAS;QACL,MAAM,QAAE,KAAI,aAAE,UAAS,QAAE,KAAI,WAAE,QAAO,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QAC3D,MAAM,YAAE,SAAQ,YAAE,SAAQ,EAAE,GAAG,IAAI,CAAC,KAAK;QACzC,MAAM,QAAQ,YAAY,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,kBAAkB,EAAE;QAC5E,MAAM,QAAQ,SAAS,MAAM,MAAM,SAAS,MAAM;QAElD,0DAA0D,GAC1D,qBACI,gCAAC;YAAI,WAAU;yBACX,gCAAC;YAAK,SAAS,IAAI,CAAC,kBAAkB;yBAClC,gCAAC;YAAK,WAAU;YAAY,OAAO,MAAM,IAAI;WAAG,MAAK,SAExD;IAGT,iBAAiB,GACrB;IArTA,YAAY,KAAK,CAAE;QACf,KAAK,CAAC;QACN,MAAM,UAAU,AAAC,MAAM,IAAI,KAAK,KAAM,EAAE,GAAG;eACpC,MAAM,OAAO;YAChB,MAAM,IAAI;SACb;QACD,IAAI,CAAC,KAAK,GAAG;YACT,MAAM,MAAM,IAAI;YAChB,MAAM,MAAM,IAAI;qBAChB;YACA,MAAM,MAAM,IAAI;YAChB,UAAU,MAAM,IAAI,GAAG;YACvB,WAAW,MAAM,WAAW,CAAC,SAAS,MAAM,IAAI,EAAE,MAAM,IAAI;YAC5D,gBAAgB,KAAK;QACzB;QAEA,OAAO;QACP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI;QAC3D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI;QACzD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI;QACjD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI;QACzD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI;QAC/D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI;QACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI;QACjD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI;QACrD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI;IAC/D;AA4RJ;AAEA,iBAAiB;AACjB,iCAAW,SAAS,GAAG;AACvB,oBAAoB;AACpB,iCAAW,YAAY,GAAG;IAE1B,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,2CAAe;;;AGxXf;;;;CAIC,GACD,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC;;;;;;AAOA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,aAAa;AACb,MAAM,kCAAY;IACd,MAAM,CAAA,GAAA,gBAAQ,EAAE,KAAK,CAAC,UAAU;IAChC,MAAM,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACjC,aAAa,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACtC,SAAS,CAAA,GAAA,gBAAS,AAAD,EAAE,KAAK;IACxB,MAAM,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IACtB,cAAc,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC5B,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,eAAe,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACxC,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,UAAU,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IAC1B,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,qBAAqB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACtC,mBAAmB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACpC,uBAAuB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IAChD,0BAA0B,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnD,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,iBAAiB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IAClC,oBAAoB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAClC,iBAAiB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC/B,oBAAoB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAClC,QAAQ,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACnC,qBAAqB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;AAClD;AACA,gBAAgB;AAChB,MAAM,qCAAe;IACjB,SAAS,EAAE;IACX,MAAM;IACN,gCAAkB,gCAAC,cAAK;IACxB,+BAAiB,gCAAC,cAAK;AAC3B;AAEA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,MAAM,wCAAkB,CAAA,GAAA,gBAAQ;IA6B5B,0BAA0B,SAAS,EAAE;QACjC,IAAI,CAAC,QAAQ,CAAC;YACV,MAAM,UAAU,IAAI;QACxB;IACJ;IAEA,cAAc,QAAQ,EAAE,SAAS,EAAE;QAC/B,MAAM,QAAE,KAAI,WAAE,QAAO,EAAE,GAAG,IAAI,CAAC,KAAK;QACpC,cAAc;QACd,IAAI,CAAC,SAAS,GAAG;QACjB,eAAe;QACf,IAAI,CAAC,QAAQ,CAAC;kBACV;QACJ;QACA,SAAS;QACT,MAAM,YAAE,SAAQ,EAAE,GAAG,IAAI,CAAC,KAAK;QAC/B,MAAM,OAAO,QAAQ,MAAM;QAC3B,SAAS,OAAO,CAAC,OAAO,EAAE,EAAE;IAChC;IAEA,gBAAgB;QACZ,IAAI,CAAC,QAAQ,CAAC;YACV,gBAAgB,IAAI;QACxB;IACJ;IAEA,qBAAqB;QACjB,IAAI,CAAC,QAAQ,CAAC;YACV,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS;QACpC;IACJ;IAEA,iBAAiB,KAAK,EAAE;QACpB,OAAO,IAAM;YACT,MAAM,sBAAE,mBAAkB,UAAE,OAAM,EAAE,GAAG,IAAI,CAAC,KAAK;YACjD,MAAM,QAAE,KAAI,WAAE,QAAO,EAAE,UAAU,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;YACpD,MAAM,WAAW,IAAI,CAAC,MAAM;YAE5B,uBAAuB;YACvB,mBAAmB,OAAO,SAAS,MAAM,UAAU,IAAI,CAAC,IAAM;gBAC1D,MAAM,UAAU,CAAA,GAAA,yCAAa,AAAD,EAAE,IAAI,CAAC,MAAM;gBACzC,MAAM,oBAAoB;6BACtB;0BACA;oBACA,KAAK;8BACL;gBACJ;gBAEA,IAAI,YAAY,YAAY,YAAY,SAAS;oBAC7C,kBAAkB,IAAI,GAAG,CAAA,GAAA,yCAAiB,AAAD;oBACzC,kBAAkB,QAAQ,GAAG,IAAI;oBACjC,IAAI,CAAC,MAAM,GAAG,IAAI;gBACtB,OAAO;oBACH,kBAAkB,IAAI,GAAG,CAAA,GAAA,wCAAiB,AAAD;oBACzC,KAAK,MAAM,CAAC,OAAO;gBACvB,CAAC;gBACD,IAAI,CAAC,QAAQ,CAAC;0BACV;gBACJ;gBACA,oBAAoB;gBACpB,MAAM,YAAE,SAAQ,iBAAE,cAAa,EAAE,GAAG,IAAI,CAAC,KAAK;gBAC9C,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,EAAE;gBACtC,sBAAsB;gBACtB,cAAc;YAClB,GAAG,KAAK,CAAC,OAAO,KAAK;QACzB;IACJ;IAEA,kBAAkB,YAAE,SAAQ,EAAE,EAAE;QAC5B,MAAM,QAAE,KAAI,WAAE,QAAO,EAAE,UAAU,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QACpD,MAAM,mBAAE,gBAAe,UAAE,OAAM,EAAE,GAAG,IAAI,CAAC,KAAK;QAE9C,gBAAgB,KAAK,MAAM,EAAE,SAAS,MAAM,UAAU,IAAI,CAAC,IAAM;YAC7D,cAAc;YACd,MAAM,UAAU;mBACT;gBACH;aACH;YACD,IAAI,CAAC,QAAQ,CAAC;gBACV,MAAM;YACV;YACA,sBAAsB;YACtB,IAAI,CAAC,oBAAoB;YACzB,oBAAoB;YACpB,MAAM,YAAE,SAAQ,iBAAE,cAAa,EAAE,GAAG,IAAI,CAAC,KAAK;YAC9C,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,EAAE;YACtC,sBAAsB;YACtB,cAAc;gBACV,MAAM,CAAA,GAAA,yCAAa;yBACnB;sBACA;gBACA,KAAK,QAAQ,MAAM,GAAG;0BACtB;YACJ;QACJ,GAAG,KAAK,CAAC,OAAO,KAAK;IACzB;IAEA,uBAAuB;QACnB,IAAI,CAAC,QAAQ,CAAC;YACV,gBAAgB,KAAK;QACzB;IACJ;IAEA,gBAAgB,OAAE,IAAG,SAAE,MAAK,EAAE,EAAE;QAC5B,OAAO,IAAI,QAAQ,CAAC,SAAS,SAAW;YACpC,MAAM,sBAAE,mBAAkB,EAAE,GAAG,IAAI,CAAC,KAAK;YACzC,MAAM,QAAE,KAAI,WAAE,QAAO,EAAE,UAAU,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;YAEpD,YAAY;YACZ,MAAM,WAAW,IAAI,CAAC,IAAI;YAE1B,uBAAuB;YACvB,mBAAmB,KAAK,SAAS,MAAM,UAAU,OAAO,IAAI,CAAC,IAAM;gBAC/D,eAAe;gBACf,IAAI,CAAC,IAAI,GAAG;gBACZ,YAAY;gBACZ,IAAI,CAAC,QAAQ,CAAC;0BACV;gBACJ;gBACA,oBAAoB;gBACpB,MAAM,YAAE,SAAQ,iBAAE,cAAa,EAAE,GAAG,IAAI,CAAC,KAAK;gBAC9C,SAAS,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE,EAAE;gBACtC,sBAAsB;gBACtB,cAAc;oBACV,MAAM,CAAA,GAAA,yCAAgB;6BACtB;0BACA;yBACA;oBACA,UAAU;8BACV;gBACJ;gBACA,UAAU;gBACV;YACJ,GAAG,KAAK,CAAC;QACb;IACJ;IAEA,kBAAkB;QACd,MAAM,QAAE,KAAI,QAAE,KAAI,WAAE,QAAO,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QAChD,MAAM,gBAAE,aAAY,YAAE,SAAQ,YAAE,SAAQ,YAAE,SAAQ,oBAAE,iBAAgB,EAAE,GAAG,IAAI,CAAC,KAAK;QAEnF,MAAM,SAAE,MAAK,aAAE,UAAS,EAAE,GAAG,SAAS,MAAM,MAAM,SAAS,MAAM;QACjE,MAAM,gBAAgB;QACtB,MAAM,gBAAgB,KAAK,MAAM;QACjC,IAAI,eAAe,IAAI;QACvB,iCAAiC;QACjC,IAAI,CAAC,SAAS,MAAM,MAAM,SAAS,MAAM,WAAW;YAChD,MAAM,gCAAkB,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,kBAAkB;gBACzD,SAAS;gBACT,WAAW;gBACX,OAAO;YACX;YACA,eAAe,AAAC,SAAS,KAAM,kBAAkB,IAAI;QACzD,CAAC;QAED,MAAM,WAAW,AAAC,gBAAgB,IAAK,UAAU,MAAM;QAEvD,0DAA0D,GAC1D,qBAAQ,gCAAC;YAAK,WAAU;yBACpB,gCAAC;YAAK,WAAU;YAAsB,OAAO;YAAW,SAAS,IAAI,CAAC,kBAAkB;WACnF,eAAc,KAAE,eAAc,KAAE,WAEpC;IAEL,iBAAiB,GACrB;IAEA,qBAAqB;QACjB,MAAM,QAAE,KAAI,QAAE,KAAI,WAAE,QAAO,QAAE,KAAI,kBAAE,eAAc,YAAE,SAAQ,EAAE,GAAG,IAAI,CAAC,KAAK;QAC1E,MAAM,eACF,YAAW,gBACX,aAAY,iBACZ,cAAa,YACb,SAAQ,YACR,SAAQ,YACR,SAAQ,oBACR,iBAAgB,uBAChB,oBAAmB,qBACnB,kBAAiB,yBACjB,sBAAqB,4BACrB,yBAAwB,oBACxB,iBAAgB,mBAChB,gBAAe,sBACf,mBAAkB,mBAClB,gBAAe,sBACf,mBAAkB,UAClB,OAAM,uBACN,oBAAmB,EAClB,GAAG,IAAI,CAAC,KAAK;QAClB,MAAM,SAAE,MAAK,QAAE,KAAI,aAAE,UAAS,MAAE,GAAE,WAAE,QAAO,EAAE,GAAG,SAAS,MAAM,MAAM,SAAS,MAAM;QAEpF,IAAI,eAAe,IAAI;QACvB,MAAM,iBAAiB,SAAS,MAAM,MAAM,SAAS,MAAM;QAC3D,iCAAiC;QACjC,IAAI,CAAC,gBAAgB;YACjB,MAAM,gCAAkB,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,kBAAkB;gBACzD,SAAS;gBACT,WAAW;gBACX,OAAO;YACX;YACA,eAAe,AAAC,SAAS,KAAM,kBAAkB,IAAI;QACzD,CAAC;QAED,MAAM,OAAO,KACR,GAAG,CAAC,CAAC,MAAM,sBAAU,gCAAC,CAAA,GAAA,wCAAO;gBAC1B,KAAK;gBACL,MAAM,CAAC,EAAE,MAAM,CAAC;gBAChB,MAAM;gBACN,SAAS;gBACT,MAAM;gBACN,aAAa;gBACb,cAAc,IAAI,CAAC,gBAAgB,CAAC;gBACpC,mBAAmB,IAAI,CAAC,eAAe;gBACvC,UAAU,IAAI,CAAC,aAAa;gBAC5B,eAAe;gBACf,UAAU;gBACV,UAAU;gBACV,kBAAkB;gBAClB,qBAAqB;gBACrB,mBAAmB;gBACnB,uBAAuB;gBACvB,0BAA0B;gBAC1B,kBAAkB;gBAClB,iBAAiB;gBACjB,oBAAoB;gBACpB,iBAAiB;gBACjB,oBAAoB;gBACpB,QAAQ;gBACR,qBAAqB;;QAG7B,MAAM,YAAY,IAAI;QACtB,IAAI,OAAO,IAAI;QACf,iCAAiC;QACjC,IAAI,CAAC,gBAAgB;YACjB,MAAM,+BAAiB,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,iBAAiB;gBACvD,SAAS,IAAI,CAAC,aAAa;gBAC3B,WAAW;gBACX,OAAO;YACX;YACA,OAAO,+BACF,gCAAC;gBAAK,WAAU;gBAAgB,OAAO;6BAAS,gCAAC,CAAA,GAAA,wCAAW;gBACzD,WAAW,IAAI,CAAC,iBAAiB;gBACjC,cAAc,IAAI,CAAC,oBAAoB;gBACvC,WAAW;gBACX,kBAAkB;gBAClB,qBAAqB;gBACrB,uBAAuB;gBACvB,SAAS;gBACT,MAAM;gBACN,qBAAqB;gCAExB,gCAAC,cACG,gBAAe,KAAE,aACd;QAChB,CAAC;QAED,MAAM,cAAc;QACpB,MAAM,YAAY;QAClB,qBAAQ,gCAAC;YAAK,WAAU;yBACpB,gCAAC;YAAK,WAAU;YAA+B,OAAO;WAAY,4BAClE,gCAAC;YAAG,WAAU;YAA0B,OAAO;WAC1C,qBAEL,gCAAC;YAAK,WAAU;YAA+B,OAAO;WAAY,YACjE;IAET;IAEA,SAAS;QACL,MAAM,QAAE,KAAI,aAAE,UAAS,QAAE,KAAI,WAAE,QAAO,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QAC3D,MAAM,YAAE,SAAQ,YAAE,SAAQ,EAAE,GAAG,IAAI,CAAC,KAAK;QACzC,MAAM,QAAQ,YAAY,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,kBAAkB,EAAE;QAC5E,MAAM,QAAQ,SAAS,MAAM,MAAM,SAAS,MAAM;QAElD,0DAA0D,GAC1D,qBACI,gCAAC;YAAI,WAAU;yBACX,gCAAC;YAAK,SAAS,IAAI,CAAC,kBAAkB;yBAClC,gCAAC;YAAK,WAAU;YAAY,OAAO,MAAM,IAAI;WAAG,MAAK,SAExD;IAGT,iBAAiB,GACrB;IAzTA,YAAY,KAAK,CAAE;QACf,KAAK,CAAC;QACN,MAAM,UAAU;eACT,MAAM,OAAO;YAChB,MAAM,IAAI;SACb;QACD,IAAI,CAAC,KAAK,GAAG;YACT,MAAM,MAAM,IAAI;YAChB,MAAM,MAAM,IAAI;qBAChB;YACA,MAAM,MAAM,IAAI;YAChB,UAAU,MAAM,IAAI,GAAG;YACvB,WAAW,MAAM,WAAW,CAAC,SAAS,MAAM,IAAI,EAAE,MAAM,IAAI;YAC5D,gBAAgB,KAAK;QACzB;QAEA,OAAO;QACP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI;QACvD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI;QACjD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI;QACzD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI;QAC/D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI;QACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI;QACjD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI;QACrD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI;IAC/D;AAgSJ;AAEA,iBAAiB;AACjB,gCAAU,SAAS,GAAG;AACtB,oBAAoB;AACpB,gCAAU,YAAY,GAAG;IAEzB,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,2CAAe;;;AC5Xf;;;;CAIC,GACD,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC;;;;ACRA;;;;CAIC,GACD,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAGzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC,MAAM,6CAAuB,IAAI,OAC7B,2CAA2C;AAC3C,KACE,YAAY,MAAM,GAClB,wBAAwB,MAAM,CAAC,OAAO;GACtC,6EAA6E,MAAM,CAAC,SAAS;GAC7F,yBAAyB,MAAM,EACjC;AAGJ,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC;;;;;CAKC,GACD,SAAS,oCAAc,cAAc,EAAE,cAAc,KAAK,EAAE;IACxD,MAAM,QAAQ,2CAAqB,IAAI,CAAC;IACxC,IAAI,UAAU,IAAI,EAAE,OAAO,IAAI;IAC/B,OAAO;QACH,MAAM,KAAK,CAAC,EAAE;QACd,QAAQ,cAAc,iCAAW,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE;QACrD,MAAM,KAAK,CAAC,EAAE;IAClB;AACJ;AAEA;;;;;CAKC,GACD,SAAS,iCAAW,MAAM,EAAE;IACxB,IAAI,CAAC,QAAQ,OAAO,EAAE;IACtB,OAAO,OAAO,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;AAC5C;AAEA;;;;;;;;;CASC,GACD,SAAS,qCAAe,cAAc,EAAE;IACpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAmCC,GACD,MAAM,QAAQ,oCAAc,gBAAgB,IAAI;IAChD,IAAI,CAAC,OAAO,OAAO,IAAI;IAEvB,sEAAsE;IACtE,wEAAwE;IACxE,mEAAmE;IACnE,yEAAyE;IACzE,mBAAmB;IACnB,uCAAuC;IACvC,MAAM,OAAO,IAAI,YAAY,MAAM,MAAM,EAAE,MAAM,IAAI,IAAI;IACzD,KAAK,WAAW,GAAG,MAAM,IAAI;IAC7B,OAAO;AACX;AAGA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC;;;;;;CAMC,GACD,SAAS,4BAAM,MAAM,EAAE,uBAAuB,EAAE;IAC5C,0CAA0C;IAC1C,IAAI,yBAAyB;QACzB,MAAM,OAAO,qCAAe;QAC5B,IAAI,SAAS,IAAI,EAAE,OAAO;IAC9B,CAAC;IAED,IAAI;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAO,GAAG;QACR,OAAO;IACX;AACJ;AAEA;;;;;CAKC,GACD,SAAS,0CAAiB,IAAI,EAAE;IAC5B,MAAM,UAAU;IAChB,MAAM,UAAU,KAAK,QAAQ;IAC7B,IAAI,QAAQ,IAAI,CAAC,YAAY,KAAK,WAAW,EACzC,OAAO,KAAK,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,WAAW,CAAC,CAAC;IAE1E,OAAO;AACX;IAEA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,2CAAe;;;;ADjJf,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,aAAa;AACb,MAAM,kCAAY;IACd,MAAM,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACjC,OAAO,CAAA,GAAA,gBAAQ,EAAE,GAAG,CAAC,UAAU;IAC/B,eAAe,CAAA,GAAA,gBAAS,AAAD,EAAE,GAAG;IAC5B,SAAS,CAAA,GAAA,gBAAS,AAAD,EAAE,KAAK;IACxB,MAAM,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IACtB,cAAc,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC5B,mBAAmB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IACjC,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,UAAU,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IAC1B,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,mBAAmB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACpC,qBAAqB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACtC,0BAA0B,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnD,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,QAAQ,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACnC,qBAAqB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;AAClD;AACA,gBAAgB;AAChB,MAAM,qCAAe;IACjB,SAAS,EAAE;IACX,MAAM;IACN,mBAAmB,IAAM,CACzB;IACA,iCAAmB,gCAAC,gBAAO;IAC3B,mCAAqB,gCAAC,gBAAO;IAC7B,gCAAkB,gCAAC,cAAK;AAC5B;AAEA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,MAAM,gDAA0B,CAAA,GAAA,gBAAQ;IAuBpC,0BAA0B,SAAS,EAAE;QACjC,IAAI,CAAC,QAAQ,CAAC;YACV,OAAO,UAAU,KAAK;QAC1B;IACJ;IAEA,qBAAqB;QACjB,MAAM,eAAE,YAAW,YAAE,SAAQ,QAAE,KAAI,SAAE,MAAK,WAAE,QAAO,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QACxE,MAAM,YAAE,SAAQ,YAAE,SAAQ,EAAE,GAAG,IAAI,CAAC,KAAK;QACzC,MAAM,iBAAiB,SAAS,MAAM,OAAO,SAAS,MAAM;QAE5D,IAAI,eAAe,CAAC,kBAAmB,OAAO,SAAS,KAAK,KAAK,YAC7D,SAAS,KAAK;IAEtB;IAEA,aAAa;QACT,MAAM,qBAAE,kBAAiB,iBAAE,cAAa,UAAE,OAAM,uBAAE,oBAAmB,WAAE,QAAO,EAAE,GAAG,IAAI,CAAC,KAAK;QAC7F,MAAM,YAAE,SAAQ,QAAE,KAAI,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QAE3C,MAAM,WAAW,oBAAoB,IAAI,EAAE,SAAS,MAAM,MAAM,SAAS,KAAK;QAE9E,MAAM,SAAS;YACX,OAAO;YACP,KAAK;QACT;QAEA,aAAa;QACb,kBAAkB,QAAQ,IAAI,CAAC,IAAM;YACjC,gCAAgC;YAChC,IAAI,CAAC,CAAA,GAAA,yCAAoB,EAAE,eAAe,WACtC,IAAI,CAAC,gBAAgB;QAE7B,GAAG,KAAK,CAAC,OAAO,KAAK;IACzB;IAEA,iBAAiB;QACb,IAAI,CAAC,QAAQ,CAAC;YACV,aAAa,IAAI;QACrB;IACJ;IAEA,SAAS,IAAI,EAAE;QACX,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IAC1B;IAEA,mBAAmB;QACf,IAAI,CAAC,QAAQ,CAAC;YACV,aAAa,KAAK;QACtB;IACJ;IAEA,SAAS;QACL,MAAM,QAAE,KAAI,SAAE,MAAK,eAAE,YAAW,WAAE,QAAO,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QAC9D,MAAM,gBACF,aAAY,iBACZ,cAAa,YACb,SAAQ,YACR,SAAQ,YACR,SAAQ,qBACR,kBAAiB,uBACjB,oBAAmB,4BACnB,yBAAwB,oBACxB,iBAAgB,EAChB,SAAS,gBAAe,EACvB,GAAG,IAAI,CAAC,KAAK;QAElB,MAAM,UAAU;YACZ,QAAQ,IAAI,CAAC,gBAAgB;YAC7B,OAAO,IAAI,CAAC,UAAU;QAC1B;QAEA,MAAM,QAAQ,SAAS,MAAM,eAAe,SAAS,MAAM;QAC3D,IAAI,SAAS,IAAI;QACjB,IAAI,eAAe,IAAI;QACvB,MAAM,mBAAmB,SAAS,MAAM,eAAe,SAAS,MAAM;QAEtE,IAAI,eAAe,CAAC,kBAAkB;YAClC,MAAM,kBACF,yBAAyB,CAAA,GAAA,wCAAc,EAAE,KAAK,EAAE,iBAAiB,MAAM,MAAM,eAAe;YAEhG,MAAM,wCAA0B,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,mBAAmB;gBAClE,SAAS,IAAI,CAAC,UAAU;YAC5B;YACA,MAAM,0CAA4B,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,qBAAqB;gBACtE,SAAS,IAAI,CAAC,gBAAgB;YAClC;YACA,MAAM,sCAAwB,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,iBAAiB;gBAC9D,KAAK,IAAI,CAAC,QAAQ;gBAClB,cAAc,CAAA,GAAA,yCAAe,EAAE;gBAC/B,SAAS,CAAA,GAAA,yCAAY,EAAE;YAC3B;YAEA,uBAAU,gCAAC;gBAAK,WAAU;gBAAiB,OAAO,MAAM,QAAQ;eAC3D,uBAAsB,KAAE,2BAA2B;YAExD,eAAe,IAAI;QACvB,OAAO;YACH,0DAA0D,GAC1D,uBACI,gCAAC;gBACG,WAAU;gBAAa,OAAO,MAAM,KAAK;gBAAE,SAAS,mBAAmB,IAAI,GAAG,IAAI,CAAC,cAAc;eAEhG;YAGT,iBAAiB,GACjB,MAAM,gCAAkB,CAAA,GAAA,YAAI,EAAE,YAAY,CAAC,kBAAkB;gBACzD,SAAS;gBACT,WAAW;gBACX,OAAO,MAAM,KAAK;YACtB;YACA,eAAe,AAAC,mBAAoB,IAAI,GAAG,eAAe;QAC9D,CAAC;QAED,qBACI,gCAAC;YAAG,WAAU;YAA2B,OAAO,MAAM,EAAE;yBACpD,gCAAC;YAAK,WAAU;YAAY,OAAO,MAAM,IAAI;WAAG,MAAK,QAAW,QAC/D;IAGb;IA/IA,YAAY,KAAK,CAAE;QACf,KAAK,CAAC;QACN,MAAM,UAAU;eACT,MAAM,OAAO;YAChB,MAAM,IAAI;SACb;QACD,IAAI,CAAC,KAAK,GAAG;YACT,OAAO,MAAM,KAAK;YAClB,MAAM,MAAM,IAAI;qBAChB;YACA,MAAM,MAAM,IAAI;YAChB,aAAa,KAAK;YAClB,UAAU,IAAI;QAClB;QAEA,OAAO;QACP,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;QACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI;IAC/C;AA4HJ;AAEA,iBAAiB;AACjB,wCAAkB,SAAS,GAAG;AAC9B,oBAAoB;AACpB,wCAAkB,YAAY,GAAG;IAEjC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,2CAAe;;;;AE9Mf;;;;CAIC,GAED,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,MAAM,8BAAQ;AACd,MAAM,+BAAS;AACf,MAAM,8BAAQ;AACd,MAAM,+BAAS;AACf,MAAM,+BAAS;AACf,MAAM,gCAAU;AAChB,MAAM,6BAAO;AACb,MAAM,6BAAO;AACb,MAAM,kCAAY;AAClB,MAAM,iCAAW;AACjB,MAAM,+BAAS;IAEf,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,2CAAe;WACX;YACA;WACA;YACA;YACA;aACA;UACA;UACA;eACA;cACA;YACA;AACJ;;;;AXlCA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,aAAa;AACb,MAAM,kCAAY;IACd,MAAM,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACjC,MAAM,CAAA,GAAA,gBAAS,AAAD,EAAE,GAAG;IACnB,aAAa,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACtC,SAAS,CAAA,GAAA,gBAAS,AAAD,EAAE,KAAK;IACxB,MAAM,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IACtB,cAAc,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC5B,mBAAmB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IACjC,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,eAAe,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACxC,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,UAAU,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnC,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,qBAAqB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACtC,mBAAmB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACpC,uBAAuB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IAChD,0BAA0B,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;IACnD,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,iBAAiB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IAClC,oBAAoB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAClC,iBAAiB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC/B,oBAAoB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAClC,QAAQ,CAAA,GAAA,gBAAQ,EAAE,MAAM,CAAC,UAAU;IACnC,qBAAqB,CAAA,GAAA,gBAAQ,EAAE,IAAI,CAAC,UAAU;AAClD;AACA,gBAAgB;AAChB,MAAM,qCAAe;IACjB,SAAS,EAAE;IACX,MAAM;AACV;AAEA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,MAAM,uCAAiB,CAAA,GAAA,gBAAQ;IAW3B,0BAA0B,SAAS,EAAE;QACjC,IAAI,CAAC,QAAQ,CAAC;YACV,MAAM,UAAU,IAAI;QACxB;IACJ;IAEA,SAAS;QACL,MAAM,QAAE,KAAI,QAAE,KAAI,WAAE,QAAO,QAAE,KAAI,EAAE,GAAG,IAAI,CAAC,KAAK;QAChD,MAAM,eACF,YAAW,gBACX,aAAY,qBACZ,kBAAiB,YACjB,SAAQ,iBACR,cAAa,YACb,SAAQ,YACR,SAAQ,oBACR,iBAAgB,uBAChB,oBAAmB,qBACnB,kBAAiB,yBACjB,sBAAqB,4BACrB,yBAAwB,oBACxB,iBAAgB,mBAChB,gBAAe,sBACf,mBAAkB,mBAClB,gBAAe,sBACf,mBAAkB,UAClB,OAAM,uBACN,oBAAmB,EAClB,GAAG,IAAI,CAAC,KAAK;QAClB,MAAM,eAAe,IAAO,IAAI;QAEhC,MAAM,WAAW,CAAA,GAAA,yCAAY,EAAE;QAC/B,OAAQ;YACJ,KAAK,CAAA,GAAA,wCAAS,AAAD,EAAE,KAAK;gBAChB,qBAAQ,gCAAC,CAAA,GAAA,wCAAU,AAAD;oBACd,MAAM;oBACN,MAAM;oBACN,aAAa;oBACb,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,UAAU;oBACV,eAAe;oBACf,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,kBAAkB;oBAClB,qBAAqB;oBACrB,mBAAmB;oBACnB,uBAAuB;oBACvB,0BAA0B;oBAC1B,kBAAkB;oBAClB,iBAAiB;oBACjB,oBAAoB;oBACpB,iBAAiB;oBACjB,oBAAoB;oBACpB,QAAQ;oBACR,qBAAqB;;YAE7B,KAAK,CAAA,GAAA,wCAAS,AAAD,EAAE,MAAM;gBACjB,qBAAQ,gCAAC,CAAA,GAAA,wCAAU,AAAD;oBACd,MAAM;oBACN,MAAM;oBACN,aAAa;oBACb,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,UAAU;oBACV,eAAe;oBACf,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,kBAAkB;oBAClB,qBAAqB;oBACrB,mBAAmB;oBACnB,uBAAuB;oBACvB,0BAA0B;oBAC1B,kBAAkB;oBAClB,iBAAiB;oBACjB,oBAAoB;oBACpB,iBAAiB;oBACjB,oBAAoB;oBACpB,QAAQ;oBACR,qBAAqB;;YAE7B,KAAK,CAAA,GAAA,wCAAS,AAAD,EAAE,KAAK;gBAChB,qBAAQ,gCAAC,CAAA,GAAA,wCAAS,AAAD;oBACb,MAAM;oBACN,MAAM;oBACN,aAAa;oBACb,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,UAAU;oBACV,eAAe;oBACf,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,kBAAkB;oBAClB,qBAAqB;oBACrB,mBAAmB;oBACnB,uBAAuB;oBACvB,0BAA0B;oBAC1B,kBAAkB;oBAClB,iBAAiB;oBACjB,oBAAoB;oBACpB,iBAAiB;oBACjB,oBAAoB;oBACpB,QAAQ;oBACR,qBAAqB;;YAGzB,qBAAqB;YACrB,kBAAkB;YAClB,0BAA0B;YAC1B,2BAA2B;YAC3B,wBAAwB;YACxB,kBAAkB;YAClB,kCAAkC;YAClC,4CAA4C;YAC5C,0BAA0B;YAC1B,0BAA0B;YAC1B,0BAA0B;YAC1B,gDAAgD;YAChD,4CAA4C;YAC5C,oDAAoD;YACpD,0CAA0C;YAC1C,sBAAsB;YACtB,gDAAgD;YAChD,OAAO;YACX,KAAK,CAAA,GAAA,wCAAS,AAAD,EAAE,MAAM;gBACjB,qBAAQ,gCAAC,CAAA,GAAA,wCAAS,AAAD;oBACb,MAAM;oBACN,OAAO;oBACP,eAAe;oBACf,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,mBAAmB;oBACnB,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,qBAAqB;oBACrB,mBAAmB;oBACnB,uBAAuB;oBACvB,kBAAkB;oBAClB,QAAQ;oBACR,qBAAqB;;YAE7B,KAAK,CAAA,GAAA,wCAAS,AAAD,EAAE,OAAO;gBAClB,qBAAQ,gCAAC,CAAA,GAAA,wCAAS,AAAD;oBACb,MAAM;oBACN,OAAO,OAAO,SAAS,OAAO;oBAC9B,eAAe;oBACf,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,mBAAmB;oBACnB,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,qBAAqB;oBACrB,mBAAmB;oBACnB,uBAAuB;oBACvB,kBAAkB;oBAClB,QAAQ;oBACR,qBAAqB;;YAE7B,KAAK,CAAA,GAAA,wCAAS,AAAD,EAAE,IAAI;gBACf,qBAAQ,gCAAC,CAAA,GAAA,wCAAS,AAAD;oBACb,MAAM;oBACN,OAAO,KAAK,WAAW;oBACvB,eAAe;oBACf,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,mBAAmB;oBACnB,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,qBAAqB;oBACrB,mBAAmB;oBACnB,uBAAuB;oBACvB,kBAAkB;oBAClB,QAAQ;oBACR,qBAAqB;;YAE7B,KAAK,CAAA,GAAA,wCAAS,AAAD,EAAE,IAAI;gBACf,qBAAQ,gCAAC,CAAA,GAAA,wCAAS,AAAD;oBACb,MAAM;oBACN,OAAO;oBACP,eAAe;oBACf,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,mBAAmB;oBACnB,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,qBAAqB;oBACrB,mBAAmB;oBACnB,uBAAuB;oBACvB,kBAAkB;oBAClB,QAAQ;oBACR,qBAAqB;;YAE7B,KAAK,CAAA,GAAA,wCAAS,AAAD,EAAE,SAAS;gBACpB,qBAAQ,gCAAC,CAAA,GAAA,wCAAS,AAAD;oBACb,MAAM;oBACN,OAAO;oBACP,eAAe;oBACf,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,mBAAmB;oBACnB,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,qBAAqB;oBACrB,mBAAmB;oBACnB,uBAAuB;oBACvB,kBAAkB;oBAClB,QAAQ;oBACR,qBAAqB;;YAE7B,KAAK,CAAA,GAAA,wCAAS,AAAD,EAAE,MAAM;gBACrB,2BAA2B;gBACvB,qBAAQ,gCAAC,CAAA,GAAA,wCAAiB,AAAD;oBACrB,MAAM;oBACN,OAAO;oBACP,eAAe;oBACf,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,mBAAmB;oBACnB,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,qBAAqB;oBACrB,mBAAmB;oBACnB,0BAA0B;oBAC1B,kBAAkB;oBAClB,QAAQ;oBACR,qBAAqB;;YAE7B,KAAK,CAAA,GAAA,wCAAS,AAAD,EAAE,MAAM;gBACjB,qBAAQ,gCAAC,CAAA,GAAA,wCAAS,AAAD;oBACb,MAAM;oBACN,OAAO,KAAK,QAAQ;oBACpB,eAAe;oBACf,SAAS;oBACT,MAAM;oBACN,cAAc;oBACd,mBAAmB;oBACnB,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,qBAAqB;oBACrB,mBAAmB;oBACnB,uBAAuB;oBACvB,kBAAkB;oBAClB,QAAQ;oBACR,qBAAqB;;YAE7B;gBACI,OAAO,IAAI;QACnB;IACJ;IArRA,YAAY,KAAK,CAAE;QACf,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YACT,MAAM,MAAM,IAAI;YAChB,MAAM,MAAM,IAAI;YAChB,SAAS,MAAM,OAAO;YACtB,MAAM,MAAM,IAAI;QACpB;IACJ;AA8QJ;AAEA,iBAAiB;AACjB,+BAAS,SAAS,GAAG;AACrB,oBAAoB;AACpB,+BAAS,YAAY,GAAG;IAExB,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,2CAAe;;;AYzVf;;;;CAIC,GACD,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAGzC,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GAEzC,MAAM,2CAAS;IACX,OAAO;QACH,OAAO;IACX;IACA,MAAM;QACF,OAAO;IACX;IACA,WAAW;QACP,OAAO;IACX;IACA,WAAW,CAAC;IACZ,IAAI;QACA,SAAS;QACT,QAAQ;QACR,WAAW;IACf;IACA,MAAM;QACF,OAAO;IACX;IACA,SAAS,CAAC;AACd;AACA,MAAM,4CAAQ;IACV,OAAO;QACH,OAAO;IACX;IACA,MAAM;QACF,OAAO;IACX;IACA,WAAW;QACP,OAAO;IACX;IACA,WAAW,CAAC;IACZ,IAAI;QACA,SAAS;QACT,QAAQ;QACR,WAAW;IACf;IACA,MAAM;QACF,OAAO;IACX;IACA,SAAS,CAAC;AACd;AACA,MAAM,4CAAQ;IACV,OAAO;QACH,OAAO;IACX;IACA,UAAU,CAAC;IACX,OAAO;QACH,OAAO;IACX;IACA,IAAI;QACA,WAAW;QACX,YAAY;QACZ,SAAS;IACb;IACA,MAAM;QACF,OAAO;IACX;AACJ;;;;;;;;AbtDA,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,aAAa;AACb,MAAM,kCAAY;IACd,MAAM,CAAA,GAAA,gBAAQ,EAAE,GAAG,CAAC,UAAU;IAC9B,UAAU,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IAC1B,aAAa,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC3B,eAAe,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC7B,eAAe,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC7B,UAAU,CAAA,GAAA,gBAAS,AAAD,EAAE,SAAS,CAAC;QAC1B,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;QACd,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;KACjB;IACD,UAAU,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IACxB,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,qBAAqB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACtC,mBAAmB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACpC,cAAc,CAAA,GAAA,gBAAS,AAAD,EAAE,SAAS,CAAC;QAC9B,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;QACjB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;KACjB;IACD,iBAAiB,CAAA,GAAA,gBAAS,AAAD,EAAE,SAAS,CAAC;QACjC,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;QACjB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;KACjB;IACD,kBAAkB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IACnC,iBAAiB,CAAA,GAAA,gBAAS,AAAD,EAAE,OAAO;IAClC,oBAAoB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAClC,iBAAiB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAC/B,oBAAoB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IAClC,QAAQ,CAAA,GAAA,gBAAS,AAAD,EAAE,MAAM;IACxB,qBAAqB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;IACnC,yBAAyB,CAAA,GAAA,gBAAS,AAAD,EAAE,IAAI;AAC3C;AACA,gBAAgB;AAChB,MAAM,qCAAe;IACjB,UAAU;IACV,aAAa,CAAC,SAAS,OAAU,SAAS;IAC1C,UAAU,CAAC,SAAS,MAAM,SAAS,MAAM,WAAa;QAClD,OAAQ;YACJ,KAAK;YACL,KAAK;gBACD,OAAO,GAAA,wCAAM;YACjB,KAAK;gBACD,OAAO,GAAA,yCAAK;YAChB;gBACI,OAAO,GAAA,yCAAK;QACpB;IACJ;IACA,iCAAiC,GACjC,UAAU,CAAC,SAAS,MAAM,SAAS,MAAM,WAAa,KAAK;IAC3D,eAAe,CAAC,OAAS,CACzB;IACA,eAAe,CAAC,QAAE,KAAI,WAAE,QAAO,QAAE,KAAI,OAAE,IAAG,YAAE,SAAQ,YAAE,SAAQ,EAAE,GAAK,CACrE;IACA,oBAAoB,CAAC,KAAK,SAAS,MAAM,WAAa,IAAI,QAAQ,CAAA,UAAW;IAC7E,iBAAiB,CAAC,KAAK,SAAS,MAAM,WAAa,IAAI,QAAQ,CAAA,UAAW;IAC1E,oBAAoB,CAAC,KAAK,SAAS,MAAM,UAAU,WAAa,IAAI,QAAQ,CAAA,UAAW;IACvF,QAAQ;QAAE,OAAO,IAAM,CAAC;IAAE;IAC1B,cAAc,CAAC,OAAO,SAAS,MAAM,SAAS,MAAM,yBAAa,gCAAC;IAClE,iBAAiB,CAAC,OAAO,SAAS,MAAM,SAAS,MAAM,yBAAa,gCAAC;IACrE,gCAAgC,GAChC,yBAAyB,IAAI;AACjC;AAEA,MAAM,8CAAwB,CAAA,0BAC1B,CAAC,YAAY,SAAS,MAAM,MAAM,WAC9B,CAAA,GAAA,wCAAK,AAAD,EAAE,UAAU;AAExB,yCAAyC,GACzC,yCAAyC,GACzC,yCAAyC,GACzC,MAAM,kDAAiB,CAAA,GAAA,gBAAQ;IA2B3B,0BAA0B,SAAS,EAAE;QACjC,IAAI,CAAC,QAAQ,CAAC;YACV,MAAM,UAAU,IAAI;YACpB,UAAU,UAAU,QAAQ;QAChC;QAEA,IAAI,kCAAkC,IAAI,CAAC,KAAK,CAAC,+BAA+B;QAChF,IACI,UAAU,mBAAmB,IAC7B,UAAU,mBAAmB,KAAK,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAClE;YACE,iEAAiE;YACjE,iCAAiC;YACjC,kCAAkC,KAAK;YACvC,IAAI,CAAC,QAAQ,CAAC;gBACV,qBAAqB,UAAU,mBAAmB;iDAClD;YACJ;QACJ,CAAC;QAED,IACI,mCACA,UAAU,uBAAuB,KAAK,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAExE,2DAA2D;QAC3D,gEAAgE;QAChE,sBAAsB;QACtB,IAAI,CAAC,QAAQ,CAAC;YACV,qBACI,4CAAsB,UAAU,uBAAuB;QAC/D;IAER;IAEA,SAAS,GAAG,EAAE,IAAI,EAAE;QAChB,IAAI,CAAC,QAAQ,CAAC;kBACV;QACJ;QACA,uBAAuB;QACvB,MAAM,iBAAE,cAAa,EAAE,GAAG,IAAI,CAAC,KAAK;QACpC,cAAc;IAClB;IAEA,SAAS;QACL,MAAM,QAAE,KAAI,YAAE,SAAQ,uBAAE,oBAAmB,EAAE,GAAG,IAAI,CAAC,KAAK;QAC1D,MAAM,eACF,YAAW,iBACX,cAAa,YACb,SAAQ,YACR,SAAQ,oBACR,iBAAgB,uBAChB,oBAAmB,qBACnB,kBAAiB,gBACjB,aAAY,mBACZ,gBAAe,oBACf,iBAAgB,mBAChB,gBAAe,sBACf,mBAAkB,mBAClB,gBAAe,sBACf,mBAAkB,UAClB,OAAM,EACL,GAAG,IAAI,CAAC,KAAK;QAElB,YAAY;QACZ,MAAM,WAAW,CAAA,GAAA,yCAAY,EAAE;QAC/B,IAAI,OAAO,IAAI;QACf,IAAI,mBAAmB;QACvB,IAAI,CAAA,GAAA,yCAAY,EAAE,cAAc,WAC5B,mBAAmB,IAAO;QAE9B,IAAI,uBAAuB;QAC3B,IAAI,gBAAgB,CAAA,GAAA,yCAAY,EAAE,kBAAkB,YAChD,uBAAuB,IAAM;QAEjC,IAAI,0BAA0B;QAC9B,IAAI,mBAAmB,CAAA,GAAA,yCAAY,EAAE,qBAAqB,YACtD,0BAA0B,IAAM;QAGpC,IAAI,aAAa,YAAY,aAAa,SACtC,qBAAQ,gCAAC,CAAA,GAAA,wCAAO;YACZ,MAAM;YACN,MAAM;YACN,WAAW,KAAK;YAChB,MAAM;YACN,aAAa;YACb,UAAU,IAAI,CAAC,QAAQ;YACvB,eAAe;YACf,UAAU;YACV,UAAU;YACV,kBAAkB;YAClB,qBAAqB;YACrB,mBAAmB;YACnB,uBAAuB;YACvB,0BAA0B;YAC1B,kBAAkB;YAClB,iBAAiB;YACjB,oBAAoB;YACpB,iBAAiB;YACjB,oBAAoB;YACpB,QAAQ;YACR,qBAAqB;;aAGzB,OAAO;QAGX,qBAAQ,gCAAC;YAAI,WAAU;WAAa;IACxC;IAtIA,YAAY,KAAK,CAAE;QACf,KAAK,CAAC;QAEN,IAAI;QACJ,wEAAwE;QACxE,wDAAwD;QACxD,4BAA4B;QAC5B,IAAI;QACJ,IAAI,MAAM,mBAAmB,EAAE;YAC3B,sBAAsB,MAAM,mBAAmB;YAC/C,kCAAkC,KAAK;QAC3C,OAAO;YACH,sBAAsB,4CAAsB,MAAM,uBAAuB;YACzE,kCAAkC,IAAI;QAC1C,CAAC;QAED,IAAI,CAAC,KAAK,GAAG;YACT,MAAM,MAAM,IAAI;YAChB,UAAU,MAAM,QAAQ;iCACxB;6CACA;QACJ;QACA,OAAO;QACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;IAC3C;AA+GJ;AAEA,iBAAiB;AACjB,0CAAS,SAAS,GAAG;AACrB,oBAAoB;AACpB,0CAAS,YAAY,GAAG","sources":["src/JsonTree.js","src/components/JsonNode.js","src/components/JsonValue.js","src/utils/objectTypes.js","src/types/inputUsageTypes.js","src/utils/hotkeys.js","src/components/JsonObject.js","src/components/JsonAddValue.js","src/types/deltaTypes.js","src/components/JsonArray.js","src/components/JsonFunctionValue.js","src/utils/parse.js","src/types/dataTypes.js","src/utils/styles.js"],"sourcesContent":["/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 13/10/16\n * Licence: See Readme\n */\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JsonNode from './components/JsonNode';\nimport { value, object, array } from './utils/styles';\nimport { ADD_DELTA_TYPE, REMOVE_DELTA_TYPE, UPDATE_DELTA_TYPE } from './types/deltaTypes';\nimport { getObjectType } from './utils/objectTypes';\nimport DATA_TYPES from './types/dataTypes';\nimport INPUT_USAGE_TYPES from './types/inputUsageTypes';\nimport parse from './utils/parse';\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\n// Prop types\nconst propTypes = {\n    data: PropTypes.any.isRequired,\n    rootName: PropTypes.string,\n    isCollapsed: PropTypes.func,\n    onFullyUpdate: PropTypes.func,\n    onDeltaUpdate: PropTypes.func,\n    readOnly: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    getStyle: PropTypes.func,\n    addButtonElement: PropTypes.element,\n    cancelButtonElement: PropTypes.element,\n    editButtonElement: PropTypes.element,\n    inputElement: PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.func,\n    ]),\n    textareaElement: PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.func,\n    ]),\n    minusMenuElement: PropTypes.element,\n    plusMenuElement: PropTypes.element,\n    beforeRemoveAction: PropTypes.func,\n    beforeAddAction: PropTypes.func,\n    beforeUpdateAction: PropTypes.func,\n    logger: PropTypes.object,\n    onSubmitValueParser: PropTypes.func,\n    allowFunctionEvaluation: PropTypes.bool,\n};\n// Default props\nconst defaultProps = {\n    rootName: 'root',\n    isCollapsed: (keyPath, deep) => (deep !== -1),\n    getStyle: (keyName, data, keyPath, deep, dataType) => {\n        switch (dataType) {\n            case 'Object':\n            case 'Error':\n                return object;\n            case 'Array':\n                return array;\n            default:\n                return value;\n        }\n    },\n    /* eslint-disable no-unused-vars */\n    readOnly: (keyName, data, keyPath, deep, dataType) => false,\n    onFullyUpdate: (data) => {\n    },\n    onDeltaUpdate: ({ type, keyPath, deep, key, newValue, oldValue }) => {\n    },\n    beforeRemoveAction: (key, keyPath, deep, oldValue) => new Promise(resolve => resolve()),\n    beforeAddAction: (key, keyPath, deep, newValue) => new Promise(resolve => resolve()),\n    beforeUpdateAction: (key, keyPath, deep, oldValue, newValue) => new Promise(resolve => resolve()),\n    logger: { error: () => {} },\n    inputElement: (usage, keyPath, deep, keyName, data, dataType) => <textarea />,\n    textareaElement: (usage, keyPath, deep, keyName, data, dataType) => <textarea />,\n    /* eslint-enable no-unused-vars */\n    allowFunctionEvaluation: true,\n};\n\nconst createParsingFunction = allowFunctionEvaluation =>\n    (isEditMode, keyPath, deep, name, rawValue) =>\n        parse(rawValue, allowFunctionEvaluation);\n\n/* ************************************* */\n/* ********      COMPONENT      ******** */\n/* ************************************* */\nclass JsonTree extends Component {\n    constructor(props) {\n        super(props);\n\n        let onSubmitValueParser;\n        // This WasGenerated value lets us know whether we generated the parsing\n        // function, so we can appropriately react to changes of\n        // `allowFunctionEvaluation`\n        let onSubmitValueParserWasGenerated;\n        if (props.onSubmitValueParser) {\n            onSubmitValueParser = props.onSubmitValueParser;\n            onSubmitValueParserWasGenerated = false;\n        } else {\n            onSubmitValueParser = createParsingFunction(props.allowFunctionEvaluation);\n            onSubmitValueParserWasGenerated = true;\n        }\n\n        this.state = {\n            data: props.data,\n            rootName: props.rootName,\n            onSubmitValueParser,\n            onSubmitValueParserWasGenerated,\n        };\n        // Bind\n        this.onUpdate = this.onUpdate.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            data: nextProps.data,\n            rootName: nextProps.rootName,\n        });\n\n        let onSubmitValueParserWasGenerated = this.state.onSubmitValueParserWasGenerated;\n        if (\n            nextProps.onSubmitValueParser &&\n            nextProps.onSubmitValueParser !== this.state.onSubmitValueParser\n        ) {\n            // We just added a new submit value parser, so this is definitely\n            // not our default parser anymore\n            onSubmitValueParserWasGenerated = false;\n            this.setState({\n                onSubmitValueParser: nextProps.onSubmitValueParser,\n                onSubmitValueParserWasGenerated,\n            });\n        }\n\n        if (\n            onSubmitValueParserWasGenerated &&\n            nextProps.allowFunctionEvaluation !== this.props.allowFunctionEvaluation\n        ) {\n            // Create a new submit value parser that adheres to the new\n            // `allowFunctionEvaluation` value as long as we know the parser\n            // was generated by us\n            this.setState({\n                onSubmitValueParser:\n                    createParsingFunction(nextProps.allowFunctionEvaluation),\n            });\n        }\n    }\n\n    onUpdate(key, data) {\n        this.setState({\n            data,\n        });\n        // Call on fully update\n        const { onFullyUpdate } = this.props;\n        onFullyUpdate(data);\n    }\n\n    render() {\n        const { data, rootName, onSubmitValueParser } = this.state;\n        const {\n            isCollapsed,\n            onDeltaUpdate,\n            readOnly,\n            getStyle,\n            addButtonElement,\n            cancelButtonElement,\n            editButtonElement,\n            inputElement,\n            textareaElement,\n            minusMenuElement,\n            plusMenuElement,\n            beforeRemoveAction,\n            beforeAddAction,\n            beforeUpdateAction,\n            logger,\n            } = this.props;\n\n        // Node type\n        const dataType = getObjectType(data);\n        let node = null;\n        let readOnlyFunction = readOnly;\n        if (getObjectType(readOnly) === 'Boolean') {\n            readOnlyFunction = () => (readOnly);\n        }\n        let inputElementFunction = inputElement;\n        if (inputElement && getObjectType(inputElement) !== 'Function') {\n            inputElementFunction = () => inputElement;\n        }\n        let textareaElementFunction = textareaElement;\n        if (textareaElement && getObjectType(textareaElement) !== 'Function') {\n            textareaElementFunction = () => textareaElement;\n        }\n\n        if (dataType === 'Object' || dataType === 'Array') {\n            node = (<JsonNode\n                data={data}\n                name={rootName}\n                collapsed={false}\n                deep={-1}\n                isCollapsed={isCollapsed}\n                onUpdate={this.onUpdate}\n                onDeltaUpdate={onDeltaUpdate}\n                readOnly={readOnlyFunction}\n                getStyle={getStyle}\n                addButtonElement={addButtonElement}\n                cancelButtonElement={cancelButtonElement}\n                editButtonElement={editButtonElement}\n                inputElementGenerator={inputElementFunction}\n                textareaElementGenerator={textareaElementFunction}\n                minusMenuElement={minusMenuElement}\n                plusMenuElement={plusMenuElement}\n                beforeRemoveAction={beforeRemoveAction}\n                beforeAddAction={beforeAddAction}\n                beforeUpdateAction={beforeUpdateAction}\n                logger={logger}\n                onSubmitValueParser={onSubmitValueParser}\n            />);\n        } else {\n            node = 'Data must be an Array or Object';\n        }\n\n        return (<div className=\"rejt-tree\">{node}</div>);\n    }\n}\n\n// Add prop types\nJsonTree.propTypes = propTypes;\n// Add default props\nJsonTree.defaultProps = defaultProps;\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport { JsonTree };\nexport { ADD_DELTA_TYPE };\nexport { REMOVE_DELTA_TYPE };\nexport { UPDATE_DELTA_TYPE };\nexport { DATA_TYPES };\nexport { INPUT_USAGE_TYPES };\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 20/10/16\n * Licence: See Readme\n */\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JsonValue from './JsonValue';\nimport JsonObject from './JsonObject';\nimport JsonArray from './JsonArray';\nimport JsonFunctionValue from './JsonFunctionValue';\nimport { getObjectType } from '../utils/objectTypes';\nimport dataTypes from '../types/dataTypes';\nimport { functionToString } from '../utils/parse';\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\n// Prop types\nconst propTypes = {\n    name: PropTypes.string.isRequired,\n    data: PropTypes.any,\n    isCollapsed: PropTypes.func.isRequired,\n    keyPath: PropTypes.array,\n    deep: PropTypes.number,\n    handleRemove: PropTypes.func,\n    handleUpdateValue: PropTypes.func,\n    onUpdate: PropTypes.func.isRequired,\n    onDeltaUpdate: PropTypes.func.isRequired,\n    readOnly: PropTypes.func.isRequired,\n    getStyle: PropTypes.func.isRequired,\n    addButtonElement: PropTypes.element,\n    cancelButtonElement: PropTypes.element,\n    editButtonElement: PropTypes.element,\n    inputElementGenerator: PropTypes.func.isRequired,\n    textareaElementGenerator: PropTypes.func.isRequired,\n    minusMenuElement: PropTypes.element,\n    plusMenuElement: PropTypes.element,\n    beforeRemoveAction: PropTypes.func,\n    beforeAddAction: PropTypes.func,\n    beforeUpdateAction: PropTypes.func,\n    logger: PropTypes.object.isRequired,\n    onSubmitValueParser: PropTypes.func.isRequired,\n};\n// Default props\nconst defaultProps = {\n    keyPath: [],\n    deep: 0,\n};\n\n/* ************************************* */\n/* ********      COMPONENT      ******** */\n/* ************************************* */\nclass JsonNode extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: props.data,\n            name: props.name,\n            keyPath: props.keyPath,\n            deep: props.deep,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            data: nextProps.data,\n        });\n    }\n\n    render() {\n        const { data, name, keyPath, deep } = this.state;\n        const {\n            isCollapsed,\n            handleRemove,\n            handleUpdateValue,\n            onUpdate,\n            onDeltaUpdate,\n            readOnly,\n            getStyle,\n            addButtonElement,\n            cancelButtonElement,\n            editButtonElement,\n            inputElementGenerator,\n            textareaElementGenerator,\n            minusMenuElement,\n            plusMenuElement,\n            beforeRemoveAction,\n            beforeAddAction,\n            beforeUpdateAction,\n            logger,\n            onSubmitValueParser,\n            } = this.props;\n        const readOnlyTrue = () => (true);\n\n        const dataType = getObjectType(data);\n        switch (dataType) {\n            case dataTypes.ERROR:\n                return (<JsonObject\n                    data={data}\n                    name={name}\n                    isCollapsed={isCollapsed}\n                    keyPath={keyPath}\n                    deep={deep}\n                    handleRemove={handleRemove}\n                    onUpdate={onUpdate}\n                    onDeltaUpdate={onDeltaUpdate}\n                    readOnly={readOnlyTrue}\n                    dataType={dataType}\n                    getStyle={getStyle}\n                    addButtonElement={addButtonElement}\n                    cancelButtonElement={cancelButtonElement}\n                    editButtonElement={editButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    textareaElementGenerator={textareaElementGenerator}\n                    minusMenuElement={minusMenuElement}\n                    plusMenuElement={plusMenuElement}\n                    beforeRemoveAction={beforeRemoveAction}\n                    beforeAddAction={beforeAddAction}\n                    beforeUpdateAction={beforeUpdateAction}\n                    logger={logger}\n                    onSubmitValueParser={onSubmitValueParser}\n                />);\n            case dataTypes.OBJECT:\n                return (<JsonObject\n                    data={data}\n                    name={name}\n                    isCollapsed={isCollapsed}\n                    keyPath={keyPath}\n                    deep={deep}\n                    handleRemove={handleRemove}\n                    onUpdate={onUpdate}\n                    onDeltaUpdate={onDeltaUpdate}\n                    readOnly={readOnly}\n                    dataType={dataType}\n                    getStyle={getStyle}\n                    addButtonElement={addButtonElement}\n                    cancelButtonElement={cancelButtonElement}\n                    editButtonElement={editButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    textareaElementGenerator={textareaElementGenerator}\n                    minusMenuElement={minusMenuElement}\n                    plusMenuElement={plusMenuElement}\n                    beforeRemoveAction={beforeRemoveAction}\n                    beforeAddAction={beforeAddAction}\n                    beforeUpdateAction={beforeUpdateAction}\n                    logger={logger}\n                    onSubmitValueParser={onSubmitValueParser}\n                />);\n            case dataTypes.ARRAY:\n                return (<JsonArray\n                    data={data}\n                    name={name}\n                    isCollapsed={isCollapsed}\n                    keyPath={keyPath}\n                    deep={deep}\n                    handleRemove={handleRemove}\n                    onUpdate={onUpdate}\n                    onDeltaUpdate={onDeltaUpdate}\n                    readOnly={readOnly}\n                    dataType={dataType}\n                    getStyle={getStyle}\n                    addButtonElement={addButtonElement}\n                    cancelButtonElement={cancelButtonElement}\n                    editButtonElement={editButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    textareaElementGenerator={textareaElementGenerator}\n                    minusMenuElement={minusMenuElement}\n                    plusMenuElement={plusMenuElement}\n                    beforeRemoveAction={beforeRemoveAction}\n                    beforeAddAction={beforeAddAction}\n                    beforeUpdateAction={beforeUpdateAction}\n                    logger={logger}\n                    onSubmitValueParser={onSubmitValueParser}\n                />);\n  \n                // return (<JsonValue\n                //     name={name}\n                //     value={`\"${data}\"`}\n                //     originalValue={data}\n                //     keyPath={keyPath}\n                //     deep={deep}\n                //     handleRemove={handleRemove}\n                //     handleUpdateValue={handleUpdateValue}\n                //     readOnly={readOnly}\n                //     dataType={dataType}\n                //     getStyle={getStyle}\n                //     cancelButtonElement={cancelButtonElement}\n                //     editButtonElement={editButtonElement}\n                //     inputElementGenerator={inputElementGenerator}\n                //     minusMenuElement={minusMenuElement}\n                //     logger={logger}\n                //     onSubmitValueParser={onSubmitValueParser}\n                // />);\n            case dataTypes.NUMBER:\n                return (<JsonValue\n                    name={name}\n                    value={data}\n                    originalValue={data}\n                    keyPath={keyPath}\n                    deep={deep}\n                    handleRemove={handleRemove}\n                    handleUpdateValue={handleUpdateValue}\n                    readOnly={readOnly}\n                    dataType={dataType}\n                    getStyle={getStyle}\n                    cancelButtonElement={cancelButtonElement}\n                    editButtonElement={editButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    minusMenuElement={minusMenuElement}\n                    logger={logger}\n                    onSubmitValueParser={onSubmitValueParser}\n                />);\n            case dataTypes.BOOLEAN:\n                return (<JsonValue\n                    name={name}\n                    value={data ? 'true' : 'false'}\n                    originalValue={data}\n                    keyPath={keyPath}\n                    deep={deep}\n                    handleRemove={handleRemove}\n                    handleUpdateValue={handleUpdateValue}\n                    readOnly={readOnly}\n                    dataType={dataType}\n                    getStyle={getStyle}\n                    cancelButtonElement={cancelButtonElement}\n                    editButtonElement={editButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    minusMenuElement={minusMenuElement}\n                    logger={logger}\n                    onSubmitValueParser={onSubmitValueParser}\n                />);\n            case dataTypes.DATE:\n                return (<JsonValue\n                    name={name}\n                    value={data.toISOString()}\n                    originalValue={data}\n                    keyPath={keyPath}\n                    deep={deep}\n                    handleRemove={handleRemove}\n                    handleUpdateValue={handleUpdateValue}\n                    readOnly={readOnlyTrue}\n                    dataType={dataType}\n                    getStyle={getStyle}\n                    cancelButtonElement={cancelButtonElement}\n                    editButtonElement={editButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    minusMenuElement={minusMenuElement}\n                    logger={logger}\n                    onSubmitValueParser={onSubmitValueParser}\n                />);\n            case dataTypes.NULL:\n                return (<JsonValue\n                    name={name}\n                    value={'null'}\n                    originalValue={'null'}\n                    keyPath={keyPath}\n                    deep={deep}\n                    handleRemove={handleRemove}\n                    handleUpdateValue={handleUpdateValue}\n                    readOnly={readOnly}\n                    dataType={dataType}\n                    getStyle={getStyle}\n                    cancelButtonElement={cancelButtonElement}\n                    editButtonElement={editButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    minusMenuElement={minusMenuElement}\n                    logger={logger}\n                    onSubmitValueParser={onSubmitValueParser}\n                />);\n            case dataTypes.UNDEFINED:\n                return (<JsonValue\n                    name={name}\n                    value={'undefined'}\n                    originalValue={'undefined'}\n                    keyPath={keyPath}\n                    deep={deep}\n                    handleRemove={handleRemove}\n                    handleUpdateValue={handleUpdateValue}\n                    readOnly={readOnly}\n                    dataType={dataType}\n                    getStyle={getStyle}\n                    cancelButtonElement={cancelButtonElement}\n                    editButtonElement={editButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    minusMenuElement={minusMenuElement}\n                    logger={logger}\n                    onSubmitValueParser={onSubmitValueParser}\n                />);\n            case dataTypes.STRING:\n            // case dataTypes.FUNCTION:\n                return (<JsonFunctionValue\n                    name={name}\n                    value={data}\n                    originalValue={data}\n                    keyPath={keyPath}\n                    deep={deep}\n                    handleRemove={handleRemove}\n                    handleUpdateValue={handleUpdateValue}\n                    readOnly={readOnly}\n                    dataType={dataType}\n                    getStyle={getStyle}\n                    cancelButtonElement={cancelButtonElement}\n                    editButtonElement={editButtonElement}\n                    textareaElementGenerator={textareaElementGenerator}\n                    minusMenuElement={minusMenuElement}\n                    logger={logger}\n                    onSubmitValueParser={onSubmitValueParser}\n                />);\n            case dataTypes.SYMBOL:\n                return (<JsonValue\n                    name={name}\n                    value={data.toString()}\n                    originalValue={data}\n                    keyPath={keyPath}\n                    deep={deep}\n                    handleRemove={handleRemove}\n                    handleUpdateValue={handleUpdateValue}\n                    readOnly={readOnlyTrue}\n                    dataType={dataType}\n                    getStyle={getStyle}\n                    cancelButtonElement={cancelButtonElement}\n                    editButtonElement={editButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    minusMenuElement={minusMenuElement}\n                    logger={logger}\n                    onSubmitValueParser={onSubmitValueParser}\n                />);\n            default:\n                return null;\n        }\n    }\n}\n\n// Add prop types\nJsonNode.propTypes = propTypes;\n// Add default props\nJsonNode.defaultProps = defaultProps;\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport default JsonNode;\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 18/10/16\n * Licence: See Readme\n */\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isComponentWillChange } from '../utils/objectTypes';\nimport inputUsageTypes from '../types/inputUsageTypes';\nimport { handleHotkeys } from \"../utils/hotkeys\";\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\n// Prop types\nconst propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.any.isRequired,\n    originalValue: PropTypes.any,\n    keyPath: PropTypes.array,\n    deep: PropTypes.number,\n    handleRemove: PropTypes.func,\n    handleUpdateValue: PropTypes.func,\n    readOnly: PropTypes.func.isRequired,\n    dataType: PropTypes.string,\n    getStyle: PropTypes.func.isRequired,\n    editButtonElement: PropTypes.element,\n    cancelButtonElement: PropTypes.element,\n    inputElementGenerator: PropTypes.func.isRequired,\n    minusMenuElement: PropTypes.element,\n    logger: PropTypes.object.isRequired,\n    onSubmitValueParser: PropTypes.func.isRequired,\n};\n// Default props\nconst defaultProps = {\n    keyPath: [],\n    deep: 0,\n    handleUpdateValue: () => Promise.resolve(),\n    editButtonElement: <button>e</button>,\n    cancelButtonElement: <button>c</button>,\n    minusMenuElement: <span> - </span>,\n};\n\n/* ************************************* */\n/* ********      COMPONENT      ******** */\n/* ************************************* */\nclass JsonValue extends Component {\n    constructor(props) {\n        super(props);\n        const keyPath = [\n            ...props.keyPath,\n            props.name,\n        ];\n        this.state = {\n            value: props.value,\n            name: props.name,\n            keyPath,\n            deep: props.deep,\n            editEnabled: false,\n            inputRef: null,\n        };\n\n        // Bind\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.refInput = this.refInput.bind(this);\n        this.handleCancelEdit = this.handleCancelEdit.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.value,\n        });\n    }\n\n    componentDidUpdate() {\n        const { editEnabled, inputRef, name, value, keyPath, deep } = this.state;\n        const { readOnly, dataType } = this.props;\n        const readOnlyResult = readOnly(name, value, keyPath, deep, dataType);\n\n        if (editEnabled && !readOnlyResult && (typeof inputRef.focus === 'function')) {\n            inputRef.focus();\n        }\n    }\n\n    handleEdit() {\n        const { handleUpdateValue, originalValue, logger, onSubmitValueParser, keyPath } = this.props;\n        const { inputRef, name, deep } = this.state;\n\n        const newValue = onSubmitValueParser(true, keyPath, deep, name, inputRef.value);\n\n        const result = {\n            value: newValue,\n            key: name,\n        };\n\n        // Run update\n        handleUpdateValue(result).then(() => {\n            // Cancel edit mode if necessary\n            if (!isComponentWillChange(originalValue, newValue)) {\n                this.handleCancelEdit();\n            }\n        }).catch(logger.error);\n    }\n\n    handleEditMode() {\n        this.setState({\n            editEnabled: true,\n        });\n    }\n\n    refInput(node) {\n        this.state.inputRef = node;\n    }\n\n    handleCancelEdit() {\n        this.setState({\n            editEnabled: false,\n        });\n    }\n\n    render() {\n        const { name, value, editEnabled, keyPath, deep } = this.state;\n        const {\n            handleRemove,\n            originalValue,\n            readOnly,\n            dataType,\n            getStyle,\n            editButtonElement,\n            cancelButtonElement,\n            inputElementGenerator,\n            minusMenuElement,\n            keyPath: comeFromKeyPath,\n            } = this.props;\n\n        const hotkeys = {\n            Escape: this.handleCancelEdit,\n            Enter: this.handleEdit,\n        };\n\n        const style = getStyle(name, originalValue, keyPath, deep, dataType);\n        let result = null;\n        let minusElement = null;\n        const readOnlyResult = readOnly(name, originalValue, keyPath, deep, dataType);\n\n        if (editEnabled && !readOnlyResult) {\n            const inputElement =\n                inputElementGenerator(inputUsageTypes.VALUE, comeFromKeyPath, deep, name, originalValue, dataType);\n\n            const editButtonElementLayout = React.cloneElement(editButtonElement, {\n                onClick: this.handleEdit,\n            });\n            const cancelButtonElementLayout = React.cloneElement(cancelButtonElement, {\n                onClick: this.handleCancelEdit,\n            });\n            const inputElementLayout = React.cloneElement(inputElement, {\n                ref: this.refInput,\n                defaultValue: originalValue,\n                onKeyUp: handleHotkeys(hotkeys)\n            });\n\n            result = (<span className=\"rejt-edit-form\" style={style.editForm}>\n                {inputElementLayout} {cancelButtonElementLayout}{editButtonElementLayout}\n            </span>);\n            minusElement = null;\n        } else {\n            /* eslint-disable jsx-a11y/no-static-element-interactions */\n            result = (\n                <span className=\"rejt-value\" style={style.value} onClick={readOnlyResult ? null : this.handleEditMode}>\n                    {value}\n                </span>\n            );\n            /* eslint-enable */\n            const minusMenuLayout = React.cloneElement(minusMenuElement, {\n                onClick: handleRemove,\n                className: 'rejt-minus-menu',\n                style: style.minus,\n            });\n            minusElement = (readOnlyResult) ? null : minusMenuLayout;\n        }\n\n        return (\n            <li className=\"rejt-value-node\" style={style.li}>\n                <span className=\"rejt-name\" style={style.name}>{name}: </span>{result}\n                {minusElement}\n            </li>\n        );\n    }\n}\n\n// Add prop types\nJsonValue.propTypes = propTypes;\n// Add default props\nJsonValue.defaultProps = defaultProps;\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport default JsonValue;\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 19/10/16\n * Licence: See Readme\n */\n\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\n\n\n/* ************************************* */\n/* ********  PRIVATE FUNCTIONS  ******** */\n/* ************************************* */\n\n\n/* ************************************* */\n/* ********   PUBLIC FUNCTIONS  ******** */\n/* ************************************* */\n\n/**\n * Get Object type.\n * @param obj {*} object to get type\n * @returns {*}\n */\nfunction getObjectType(obj) {\n    if (obj !== null && typeof obj === 'object' && !Array.isArray(obj) &&\n        typeof obj[Symbol.iterator] === 'function') {\n        return 'Iterable';\n    }\n    return Object.prototype.toString.call(obj).slice(8, -1);\n}\n\n/**\n * Is Component will change ?\n * @param oldValue {*} old value\n * @param newValue {*} new value\n * @returns {boolean} result\n */\nfunction isComponentWillChange(oldValue, newValue) {\n    const oldType = getObjectType(oldValue);\n    const newType = getObjectType(newValue);\n    return ((oldType === 'Function' || newType === 'Function') && newType !== oldType);\n}\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport { getObjectType };\nexport { isComponentWillChange };\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 27/02/18\n * Licence: See Readme\n */\n\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\nconst VALUE = 'value';\nconst KEY = 'key';\n\n/* ************************************* */\n/* ********       CLASSES       ******** */\n/* ************************************* */\n\n/* ************************************* */\n/* ********  PRIVATE FUNCTIONS  ******** */\n/* ************************************* */\n\n/* ************************************* */\n/* ********   PUBLIC FUNCTIONS  ******** */\n/* ************************************* */\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport default {\n    KEY,\n    VALUE,\n};\n","/**\n * Handle key events with handlers\n * @param {{[keyName: string]: () => void}} hotkeys an object with keyboard key\n *   names and associated handlers to call for those keys\n * @returns {(keyEvent: KeyboardEvent) => void} an event handler to handle key\n *   events for the given hotkeys\n */\nexport const handleHotkeys = (hotkeys) => (keyEvent) => {\n    if (Object.hasOwn(hotkeys, keyEvent.key)) {\n        hotkeys[keyEvent.key]();\n    }\n};\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 18/10/16\n * Licence: See Readme\n */\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JsonNode from './JsonNode';\nimport JsonAddValue from './JsonAddValue';\nimport { getObjectType } from '../utils/objectTypes';\nimport { ADD_DELTA_TYPE, REMOVE_DELTA_TYPE, UPDATE_DELTA_TYPE } from '../types/deltaTypes';\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\n// Prop types\nconst propTypes = {\n    data: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    isCollapsed: PropTypes.func.isRequired,\n    keyPath: PropTypes.array,\n    deep: PropTypes.number,\n    handleRemove: PropTypes.func,\n    onUpdate: PropTypes.func.isRequired,\n    onDeltaUpdate: PropTypes.func.isRequired,\n    readOnly: PropTypes.func.isRequired,\n    dataType: PropTypes.string,\n    getStyle: PropTypes.func.isRequired,\n    addButtonElement: PropTypes.element,\n    cancelButtonElement: PropTypes.element,\n    editButtonElement: PropTypes.element,\n    inputElementGenerator: PropTypes.func.isRequired,\n    textareaElementGenerator: PropTypes.func.isRequired,\n    minusMenuElement: PropTypes.element,\n    plusMenuElement: PropTypes.element,\n    beforeRemoveAction: PropTypes.func,\n    beforeAddAction: PropTypes.func,\n    beforeUpdateAction: PropTypes.func,\n    logger: PropTypes.object.isRequired,\n    onSubmitValueParser: PropTypes.func.isRequired,\n};\n// Default props\nconst defaultProps = {\n    keyPath: [],\n    deep: 0,\n    minusMenuElement: <span> - </span>,\n    plusMenuElement: <span> + </span>,\n};\n\n/* ************************************* */\n/* ********      COMPONENT      ******** */\n/* ************************************* */\nclass JsonObject extends Component {\n    constructor(props) {\n        super(props);\n        const keyPath = (props.deep === -1) ? [] : [\n            ...props.keyPath,\n            props.name,\n        ];\n        this.state = {\n            name: props.name,\n            data: props.data,\n            keyPath,\n            deep: props.deep,\n            nextDeep: props.deep + 1,\n            collapsed: props.isCollapsed(keyPath, props.deep, props.data),\n            addFormVisible: false,\n        };\n\n        // Bind\n        this.handleCollapseMode = this.handleCollapseMode.bind(this);\n        this.handleRemoveValue = this.handleRemoveValue.bind(this);\n        this.handleAddMode = this.handleAddMode.bind(this);\n        this.handleAddValueAdd = this.handleAddValueAdd.bind(this);\n        this.handleAddValueCancel = this.handleAddValueCancel.bind(this);\n        this.handleEditValue = this.handleEditValue.bind(this);\n        this.onChildUpdate = this.onChildUpdate.bind(this);\n        this.renderCollapsed = this.renderCollapsed.bind(this);\n        this.renderNotCollapsed = this.renderNotCollapsed.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            data: nextProps.data,\n        });\n    }\n\n    onChildUpdate(childKey, childData) {\n        const { data, keyPath } = this.state;\n        // Update data\n        data[childKey] = childData;\n        // Put new data\n        this.setState({\n            data,\n        });\n        // Spread\n        const { onUpdate } = this.props;\n        const size = keyPath.length;\n        onUpdate(keyPath[size - 1], data);\n    }\n\n    handleAddMode() {\n        this.setState({\n            addFormVisible: true,\n        });\n    }\n\n    handleAddValueCancel() {\n        this.setState({\n            addFormVisible: false,\n        });\n    }\n\n    handleAddValueAdd({ key, newValue }) {\n        const { data, keyPath, nextDeep: deep } = this.state;\n        const { beforeAddAction, logger } = this.props;\n\n        beforeAddAction(key, keyPath, deep, newValue).then(() => {\n            // Update data\n            data[key] = newValue;\n            this.setState({\n                data,\n            });\n            // Cancel add to close\n            this.handleAddValueCancel();\n            // Spread new update\n            const { onUpdate, onDeltaUpdate } = this.props;\n            onUpdate(keyPath[keyPath.length - 1], data);\n            // Spread delta update\n            onDeltaUpdate({\n                type: ADD_DELTA_TYPE,\n                keyPath,\n                deep,\n                key,\n                newValue,\n            });\n        }).catch(logger.error);\n    }\n\n    handleRemoveValue(key) {\n        return () => {\n            const { beforeRemoveAction, logger } = this.props;\n            const { data, keyPath, nextDeep: deep } = this.state;\n            const oldValue = data[key];\n            // Before Remove Action\n            beforeRemoveAction(key, keyPath, deep, oldValue).then(() => {\n                const objType = getObjectType(oldValue);\n                const deltaUpdateResult = {\n                    keyPath,\n                    deep,\n                    key,\n                    oldValue,\n                };\n\n                if (objType === 'Object' || objType === 'Array') {\n                    deltaUpdateResult.type = UPDATE_DELTA_TYPE;\n                    deltaUpdateResult.newValue = null;\n                    data[key] = null;\n                } else {\n                    deltaUpdateResult.type = REMOVE_DELTA_TYPE;\n                    delete data[key];\n                }\n                this.setState({\n                    data,\n                });\n                // Spread new update\n                const { onUpdate, onDeltaUpdate } = this.props;\n                onUpdate(keyPath[keyPath.length - 1], data);\n                // Spread delta update\n                onDeltaUpdate(deltaUpdateResult);\n            }).catch(logger.error);\n        };\n    }\n\n    handleCollapseMode() {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    handleEditValue({ key, value }) {\n        return new Promise((resolve, reject) => {\n            const { beforeUpdateAction } = this.props;\n            const { data, keyPath, nextDeep: deep } = this.state;\n\n            // Old value\n            const oldValue = data[key];\n\n            // Before update action\n            beforeUpdateAction(key, keyPath, deep, oldValue, value).then(() => {\n                // Update value\n                data[key] = value;\n                // Set state\n                this.setState({\n                    data,\n                });\n                // Spread new update\n                const { onUpdate, onDeltaUpdate } = this.props;\n                onUpdate(keyPath[keyPath.length - 1], data);\n                // Spread delta update\n                onDeltaUpdate({\n                    type: UPDATE_DELTA_TYPE,\n                    keyPath,\n                    deep,\n                    key,\n                    newValue: value,\n                    oldValue,\n                });\n                // Resolve\n                resolve();\n            }).catch(reject);\n        });\n    }\n\n    renderCollapsed() {\n        const { name, keyPath, deep, data } = this.state;\n        const { handleRemove, readOnly, dataType, getStyle, minusMenuElement } = this.props;\n\n        const { minus, collapsed } = getStyle(name, data, keyPath, deep, dataType);\n        const keyList = Object.getOwnPropertyNames(data);\n        const collapseValue = ' {...}';\n        const numberOfItems = keyList.length;\n        const itemName = (numberOfItems > 1) ? 'keys' : 'key';\n        let minusElement = null;\n        // Check if readOnly is activated\n        if (!readOnly(name, data, keyPath, deep, dataType)) {\n            const minusMenuLayout = React.cloneElement(minusMenuElement, {\n                onClick: handleRemove,\n                className: 'rejt-minus-menu',\n                style: minus,\n            });\n            minusElement = (deep !== -1) ? minusMenuLayout : null;\n        }\n\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n        return (<span className=\"rejt-collapsed\">\n            <span className=\"rejt-collapsed-text\" style={collapsed} onClick={this.handleCollapseMode}>\n                {collapseValue} {numberOfItems} {itemName}\n            </span>\n            {minusElement}\n        </span>);\n        /* eslint-enable */\n    }\n\n    renderNotCollapsed() {\n        const { name, data, keyPath, deep, nextDeep, addFormVisible } = this.state;\n        const {\n            isCollapsed,\n            handleRemove,\n            onDeltaUpdate,\n            readOnly,\n            getStyle,\n            dataType,\n            addButtonElement,\n            cancelButtonElement,\n            editButtonElement,\n            inputElementGenerator,\n            textareaElementGenerator,\n            minusMenuElement,\n            plusMenuElement,\n            beforeRemoveAction,\n            beforeAddAction,\n            beforeUpdateAction,\n            logger,\n            onSubmitValueParser,\n            } = this.props;\n\n        const { minus, plus, addForm, ul, delimiter } = getStyle(name, data, keyPath, deep, dataType);\n        const keyList = Object.getOwnPropertyNames(data);\n        let minusElement = null;\n        const readOnlyResult = readOnly(name, data, keyPath, deep, dataType);\n        // Check if readOnly is activated\n        if (!readOnlyResult) {\n            const minusMenuLayout = React.cloneElement(minusMenuElement, {\n                onClick: handleRemove,\n                className: 'rejt-minus-menu',\n                style: minus,\n            });\n            minusElement = (deep !== -1) ? minusMenuLayout : null;\n        }\n\n        const list = keyList\n            .map(key => <JsonNode\n                key={key}\n                name={key}\n                data={data[key]}\n                keyPath={keyPath}\n                deep={nextDeep}\n                isCollapsed={isCollapsed}\n                handleRemove={this.handleRemoveValue(key)}\n                handleUpdateValue={this.handleEditValue}\n                onUpdate={this.onChildUpdate}\n                onDeltaUpdate={onDeltaUpdate}\n                readOnly={readOnly}\n                getStyle={getStyle}\n                addButtonElement={addButtonElement}\n                cancelButtonElement={cancelButtonElement}\n                editButtonElement={editButtonElement}\n                inputElementGenerator={inputElementGenerator}\n                textareaElementGenerator={textareaElementGenerator}\n                minusMenuElement={minusMenuElement}\n                plusMenuElement={plusMenuElement}\n                beforeRemoveAction={beforeRemoveAction}\n                beforeAddAction={beforeAddAction}\n                beforeUpdateAction={beforeUpdateAction}\n                logger={logger}\n                onSubmitValueParser={onSubmitValueParser}\n            />);\n\n        const startObject = '{';\n        const endObject = '}';\n\n        let menu = null;\n        // Check if readOnly is activated\n        if (!readOnlyResult) {\n            const plusMenuLayout = React.cloneElement(plusMenuElement, {\n                onClick: this.handleAddMode,\n                className: 'rejt-plus-menu',\n                style: plus,\n            });\n            menu = addFormVisible ?\n                (<span className=\"rejt-add-form\" style={addForm}><JsonAddValue\n                    handleAdd={this.handleAddValueAdd}\n                    handleCancel={this.handleAddValueCancel}\n                    addButtonElement={addButtonElement}\n                    cancelButtonElement={cancelButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    keyPath={keyPath}\n                    deep={deep}\n                    onSubmitValueParser={onSubmitValueParser}\n                /></span>) :\n                (<span>\n                    {plusMenuLayout} {minusElement}\n                </span>);\n        }\n\n        return (<span className=\"rejt-not-collapsed\">\n            <span className=\"rejt-not-collapsed-delimiter\" style={delimiter}>{startObject}</span>\n            <ul className=\"rejt-not-collapsed-list\" style={ul}>\n                {list}\n            </ul>\n            <span className=\"rejt-not-collapsed-delimiter\" style={delimiter}>{endObject}</span>\n            {menu}\n        </span>);\n    }\n\n    render() {\n        const { name, collapsed, data, keyPath, deep } = this.state;\n        const { getStyle, dataType } = this.props;\n        const value = collapsed ? this.renderCollapsed() : this.renderNotCollapsed();\n        const style = getStyle(name, data, keyPath, deep, dataType);\n\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n        return (\n            <div className=\"rejt-object-node\">\n                <span onClick={this.handleCollapseMode}>\n                    <span className=\"rejt-name\" style={style.name}>{name} : </span>\n                </span>\n                {value}\n            </div>\n        );\n        /* eslint-enable */\n    }\n}\n\n// Add prop types\nJsonObject.propTypes = propTypes;\n// Add default props\nJsonObject.defaultProps = defaultProps;\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport default JsonObject;\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 22/10/16\n * Licence: See Readme\n */\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport inputUsageTypes from '../types/inputUsageTypes';\nimport { handleHotkeys } from \"../utils/hotkeys\";\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\n// Prop types\nconst propTypes = {\n    handleAdd: PropTypes.func.isRequired,\n    handleCancel: PropTypes.func.isRequired,\n    onlyValue: PropTypes.bool,\n    addButtonElement: PropTypes.element,\n    cancelButtonElement: PropTypes.element,\n    inputElementGenerator: PropTypes.func.isRequired,\n    keyPath: PropTypes.array,\n    deep: PropTypes.number,\n    onSubmitValueParser: PropTypes.func.isRequired,\n};\n// Default props\nconst defaultProps = {\n    onlyValue: false,\n    addButtonElement: <button>+</button>,\n    cancelButtonElement: <button>c</button>,\n};\n\n/* ************************************* */\n/* ********      COMPONENT      ******** */\n/* ************************************* */\nclass JsonAddValue extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputRefKey: null,\n            inputRefValue: null,\n        };\n        // Bind\n        this.refInputValue = this.refInputValue.bind(this);\n        this.refInputKey = this.refInputKey.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        const { inputRefKey, inputRefValue } = this.state;\n        const { onlyValue } = this.props;\n\n        if (inputRefKey && (typeof inputRefKey.focus === 'function')) {\n            inputRefKey.focus();\n        }\n\n        if (onlyValue && inputRefValue && (typeof inputRefValue.focus === 'function')) {\n            inputRefValue.focus();\n        }\n    }\n\n    onSubmit() {\n        const { handleAdd, onlyValue, onSubmitValueParser, keyPath, deep } = this.props;\n        const { inputRefKey, inputRefValue } = this.state;\n        const result = {};\n        // Check if we have the key\n        if (!onlyValue) {\n            // Check that there is a key\n            if (!inputRefKey.value) {\n                // Empty key => Not authorized\n                return;\n            }\n\n            result.key = inputRefKey.value;\n        }\n        result.newValue = onSubmitValueParser(false, keyPath, deep, result.key, inputRefValue.value);\n        handleAdd(result);\n    }\n\n    refInputKey(node) {\n        this.state.inputRefKey = node;\n    }\n\n    refInputValue(node) {\n        this.state.inputRefValue = node;\n    }\n\n    render() {\n        const {\n            handleCancel,\n            onlyValue,\n            addButtonElement,\n            cancelButtonElement,\n            inputElementGenerator,\n            keyPath,\n            deep,\n        } = this.props;\n\n        const hotkeys = {\n            Escape: handleCancel,\n            Enter: this.onSubmit,\n        };\n\n        const addButtonElementLayout = React.cloneElement(addButtonElement, {\n            onClick: this.onSubmit,\n        });\n        const cancelButtonElementLayout = React.cloneElement(cancelButtonElement, {\n            onClick: handleCancel,\n        });\n        const inputElementValue = inputElementGenerator(inputUsageTypes.VALUE, keyPath, deep);\n        const inputElementValueLayout = React.cloneElement(inputElementValue, {\n            placeholder: 'Value',\n            ref: this.refInputValue,\n            onKeyUp: handleHotkeys(hotkeys),\n        });\n        let inputElementKeyLayout = null;\n        let separatorElement = null;\n\n        if (!onlyValue) {\n            const inputElementKey = inputElementGenerator(inputUsageTypes.KEY, keyPath, deep);\n            inputElementKeyLayout = React.cloneElement(inputElementKey, {\n                placeholder: 'Key',\n                ref: this.refInputKey,\n                onKeyUp: handleHotkeys(hotkeys),\n            });\n            separatorElement = ':';\n        }\n\n        return (\n            <span className=\"rejt-add-value-node\">\n                {inputElementKeyLayout} {separatorElement} {inputElementValueLayout} {cancelButtonElementLayout}\n                {addButtonElementLayout}\n            </span>\n        );\n    }\n}\n\n// Add prop types\nJsonAddValue.propTypes = propTypes;\n// Add default props\nJsonAddValue.defaultProps = defaultProps;\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport default JsonAddValue;\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 23/10/16\n * Licence: See Readme\n */\n\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\n\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\nconst ADD_DELTA_TYPE = 'ADD_DELTA_TYPE';\nconst REMOVE_DELTA_TYPE = 'REMOVE_DELTA_TYPE';\nconst UPDATE_DELTA_TYPE = 'UPDATE_DELTA_TYPE';\n\n/* ************************************* */\n/* ********  PRIVATE FUNCTIONS  ******** */\n/* ************************************* */\n\n\n/* ************************************* */\n/* ********   PUBLIC FUNCTIONS  ******** */\n/* ************************************* */\n\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport { ADD_DELTA_TYPE };\nexport { REMOVE_DELTA_TYPE };\nexport { UPDATE_DELTA_TYPE };\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 20/10/16\n * Licence: See Readme\n */\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JsonNode from './JsonNode';\nimport JsonAddValue from './JsonAddValue';\nimport { getObjectType } from '../utils/objectTypes';\nimport { ADD_DELTA_TYPE, REMOVE_DELTA_TYPE, UPDATE_DELTA_TYPE } from '../types/deltaTypes';\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\n// Prop types\nconst propTypes = {\n    data: PropTypes.array.isRequired,\n    name: PropTypes.string.isRequired,\n    isCollapsed: PropTypes.func.isRequired,\n    keyPath: PropTypes.array,\n    deep: PropTypes.number,\n    handleRemove: PropTypes.func,\n    onUpdate: PropTypes.func.isRequired,\n    onDeltaUpdate: PropTypes.func.isRequired,\n    readOnly: PropTypes.func.isRequired,\n    dataType: PropTypes.string,\n    getStyle: PropTypes.func.isRequired,\n    addButtonElement: PropTypes.element,\n    cancelButtonElement: PropTypes.element,\n    editButtonElement: PropTypes.element,\n    inputElementGenerator: PropTypes.func.isRequired,\n    textareaElementGenerator: PropTypes.func.isRequired,\n    minusMenuElement: PropTypes.element,\n    plusMenuElement: PropTypes.element,\n    beforeRemoveAction: PropTypes.func,\n    beforeAddAction: PropTypes.func,\n    beforeUpdateAction: PropTypes.func,\n    logger: PropTypes.object.isRequired,\n    onSubmitValueParser: PropTypes.func.isRequired,\n};\n// Default props\nconst defaultProps = {\n    keyPath: [],\n    deep: 0,\n    minusMenuElement: <span> - </span>,\n    plusMenuElement: <span> + </span>,\n};\n\n/* ************************************* */\n/* ********      COMPONENT      ******** */\n/* ************************************* */\nclass JsonArray extends Component {\n    constructor(props) {\n        super(props);\n        const keyPath = [\n            ...props.keyPath,\n            props.name,\n        ];\n        this.state = {\n            data: props.data,\n            name: props.name,\n            keyPath,\n            deep: props.deep,\n            nextDeep: props.deep + 1,\n            collapsed: props.isCollapsed(keyPath, props.deep, props.data),\n            addFormVisible: false,\n        };\n\n        // Bind\n        this.handleCollapseMode = this.handleCollapseMode.bind(this);\n        this.handleRemoveItem = this.handleRemoveItem.bind(this);\n        this.handleAddMode = this.handleAddMode.bind(this);\n        this.handleAddValueAdd = this.handleAddValueAdd.bind(this);\n        this.handleAddValueCancel = this.handleAddValueCancel.bind(this);\n        this.handleEditValue = this.handleEditValue.bind(this);\n        this.onChildUpdate = this.onChildUpdate.bind(this);\n        this.renderCollapsed = this.renderCollapsed.bind(this);\n        this.renderNotCollapsed = this.renderNotCollapsed.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            data: nextProps.data,\n        });\n    }\n\n    onChildUpdate(childKey, childData) {\n        const { data, keyPath } = this.state;\n        // Update data\n        data[childKey] = childData;\n        // Put new data\n        this.setState({\n            data,\n        });\n        // Spread\n        const { onUpdate } = this.props;\n        const size = keyPath.length;\n        onUpdate(keyPath[size - 1], data);\n    }\n\n    handleAddMode() {\n        this.setState({\n            addFormVisible: true,\n        });\n    }\n\n    handleCollapseMode() {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    handleRemoveItem(index) {\n        return () => {\n            const { beforeRemoveAction, logger } = this.props;\n            const { data, keyPath, nextDeep: deep } = this.state;\n            const oldValue = data[index];\n\n            // Before Remove Action\n            beforeRemoveAction(index, keyPath, deep, oldValue).then(() => {\n                const objType = getObjectType(data[index]);\n                const deltaUpdateResult = {\n                    keyPath,\n                    deep,\n                    key: index,\n                    oldValue,\n                };\n\n                if (objType === 'Object' || objType === 'Array') {\n                    deltaUpdateResult.type = UPDATE_DELTA_TYPE;\n                    deltaUpdateResult.newValue = null;\n                    data[index] = null;\n                } else {\n                    deltaUpdateResult.type = REMOVE_DELTA_TYPE;\n                    data.splice(index, 1);\n                }\n                this.setState({\n                    data,\n                });\n                // Spread new update\n                const { onUpdate, onDeltaUpdate } = this.props;\n                onUpdate(keyPath[keyPath.length - 1], data);\n                // Spread delta update\n                onDeltaUpdate(deltaUpdateResult);\n            }).catch(logger.error);\n        };\n    }\n\n    handleAddValueAdd({ newValue }) {\n        const { data, keyPath, nextDeep: deep } = this.state;\n        const { beforeAddAction, logger } = this.props;\n\n        beforeAddAction(data.length, keyPath, deep, newValue).then(() => {\n            // Update data\n            const newData = [\n                ...data,\n                newValue,\n            ];\n            this.setState({\n                data: newData,\n            });\n            // Cancel add to close\n            this.handleAddValueCancel();\n            // Spread new update\n            const { onUpdate, onDeltaUpdate } = this.props;\n            onUpdate(keyPath[keyPath.length - 1], newData);\n            // Spread delta update\n            onDeltaUpdate({\n                type: ADD_DELTA_TYPE,\n                keyPath,\n                deep,\n                key: newData.length - 1,\n                newValue,\n            });\n        }).catch(logger.error);\n    }\n\n    handleAddValueCancel() {\n        this.setState({\n            addFormVisible: false,\n        });\n    }\n\n    handleEditValue({ key, value }) {\n        return new Promise((resolve, reject) => {\n            const { beforeUpdateAction } = this.props;\n            const { data, keyPath, nextDeep: deep } = this.state;\n\n            // Old value\n            const oldValue = data[key];\n\n            // Before update action\n            beforeUpdateAction(key, keyPath, deep, oldValue, value).then(() => {\n                // Update value\n                data[key] = value;\n                // Set state\n                this.setState({\n                    data,\n                });\n                // Spread new update\n                const { onUpdate, onDeltaUpdate } = this.props;\n                onUpdate(keyPath[keyPath.length - 1], data);\n                // Spread delta update\n                onDeltaUpdate({\n                    type: UPDATE_DELTA_TYPE,\n                    keyPath,\n                    deep,\n                    key,\n                    newValue: value,\n                    oldValue,\n                });\n                // Resolve\n                resolve();\n            }).catch(reject);\n        });\n    }\n\n    renderCollapsed() {\n        const { name, data, keyPath, deep } = this.state;\n        const { handleRemove, readOnly, getStyle, dataType, minusMenuElement } = this.props;\n\n        const { minus, collapsed } = getStyle(name, data, keyPath, deep, dataType);\n        const collapseValue = ' [...]';\n        const numberOfItems = data.length;\n        let minusElement = null;\n        // Check if readOnly is activated\n        if (!readOnly(name, data, keyPath, deep, dataType)) {\n            const minusMenuLayout = React.cloneElement(minusMenuElement, {\n                onClick: handleRemove,\n                className: 'rejt-minus-menu',\n                style: minus,\n            });\n            minusElement = (deep !== -1) ? minusMenuLayout : null;\n        }\n\n        const itemName = (numberOfItems > 1) ? 'items' : 'item';\n\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n        return (<span className=\"rejt-collapsed\">\n            <span className=\"rejt-collapsed-text\" style={collapsed} onClick={this.handleCollapseMode}>\n                {collapseValue} {numberOfItems} {itemName}\n            </span>\n            {minusElement}\n        </span>);\n        /* eslint-enable */\n    }\n\n    renderNotCollapsed() {\n        const { name, data, keyPath, deep, addFormVisible, nextDeep } = this.state;\n        const {\n            isCollapsed,\n            handleRemove,\n            onDeltaUpdate,\n            readOnly,\n            getStyle,\n            dataType,\n            addButtonElement,\n            cancelButtonElement,\n            editButtonElement,\n            inputElementGenerator,\n            textareaElementGenerator,\n            minusMenuElement,\n            plusMenuElement,\n            beforeRemoveAction,\n            beforeAddAction,\n            beforeUpdateAction,\n            logger,\n            onSubmitValueParser,\n            } = this.props;\n        const { minus, plus, delimiter, ul, addForm } = getStyle(name, data, keyPath, deep, dataType);\n\n        let minusElement = null;\n        const readOnlyResult = readOnly(name, data, keyPath, deep, dataType);\n        // Check if readOnly is activated\n        if (!readOnlyResult) {\n            const minusMenuLayout = React.cloneElement(minusMenuElement, {\n                onClick: handleRemove,\n                className: 'rejt-minus-menu',\n                style: minus,\n            });\n            minusElement = (deep !== -1) ? minusMenuLayout : null;\n        }\n\n        const list = data\n            .map((item, index) => <JsonNode\n                key={index}\n                name={`${index}`}\n                data={item}\n                keyPath={keyPath}\n                deep={nextDeep}\n                isCollapsed={isCollapsed}\n                handleRemove={this.handleRemoveItem(index)}\n                handleUpdateValue={this.handleEditValue}\n                onUpdate={this.onChildUpdate}\n                onDeltaUpdate={onDeltaUpdate}\n                readOnly={readOnly}\n                getStyle={getStyle}\n                addButtonElement={addButtonElement}\n                cancelButtonElement={cancelButtonElement}\n                editButtonElement={editButtonElement}\n                inputElementGenerator={inputElementGenerator}\n                textareaElementGenerator={textareaElementGenerator}\n                minusMenuElement={minusMenuElement}\n                plusMenuElement={plusMenuElement}\n                beforeRemoveAction={beforeRemoveAction}\n                beforeAddAction={beforeAddAction}\n                beforeUpdateAction={beforeUpdateAction}\n                logger={logger}\n                onSubmitValueParser={onSubmitValueParser}\n            />);\n\n        const onlyValue = true;\n        let menu = null;\n        // Check if readOnly is activated\n        if (!readOnlyResult) {\n            const plusMenuLayout = React.cloneElement(plusMenuElement, {\n                onClick: this.handleAddMode,\n                className: 'rejt-plus-menu',\n                style: plus,\n            });\n            menu = addFormVisible ?\n                (<span className=\"rejt-add-form\" style={addForm}><JsonAddValue\n                    handleAdd={this.handleAddValueAdd}\n                    handleCancel={this.handleAddValueCancel}\n                    onlyValue={onlyValue}\n                    addButtonElement={addButtonElement}\n                    cancelButtonElement={cancelButtonElement}\n                    inputElementGenerator={inputElementGenerator}\n                    keyPath={keyPath}\n                    deep={deep}\n                    onSubmitValueParser={onSubmitValueParser}\n                /></span>) :\n                (<span>\n                    {plusMenuLayout} {minusElement}\n                </span>);\n        }\n\n        const startObject = '[';\n        const endObject = ']';\n        return (<span className=\"rejt-not-collapsed\">\n            <span className=\"rejt-not-collapsed-delimiter\" style={delimiter}>{startObject}</span>\n            <ul className=\"rejt-not-collapsed-list\" style={ul}>\n                {list}\n            </ul>\n            <span className=\"rejt-not-collapsed-delimiter\" style={delimiter}>{endObject}</span>\n            {menu}\n        </span>);\n    }\n\n    render() {\n        const { name, collapsed, data, keyPath, deep } = this.state;\n        const { dataType, getStyle } = this.props;\n        const value = collapsed ? this.renderCollapsed() : this.renderNotCollapsed();\n        const style = getStyle(name, data, keyPath, deep, dataType);\n\n        /* eslint-disable jsx-a11y/no-static-element-interactions */\n        return (\n            <div className=\"rejt-array-node\">\n                <span onClick={this.handleCollapseMode}>\n                    <span className=\"rejt-name\" style={style.name}>{name} : </span>\n                </span>\n                {value}\n            </div>\n        );\n        /* eslint-enable */\n    }\n}\n\n// Add prop types\nJsonArray.propTypes = propTypes;\n// Add default props\nJsonArray.defaultProps = defaultProps;\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport default JsonArray;\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 13/11/16\n * Licence: See Readme\n */\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isComponentWillChange } from '../utils/objectTypes';\nimport inputUsageTypes from '../types/inputUsageTypes';\nimport { functionToString } from '../utils/parse';\nimport { handleHotkeys } from \"../utils/hotkeys\";\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\n// Prop types\nconst propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.any.isRequired,\n    originalValue: PropTypes.any,\n    keyPath: PropTypes.array,\n    deep: PropTypes.number,\n    handleRemove: PropTypes.func,\n    handleUpdateValue: PropTypes.func,\n    readOnly: PropTypes.func.isRequired,\n    dataType: PropTypes.string,\n    getStyle: PropTypes.func.isRequired,\n    editButtonElement: PropTypes.element,\n    cancelButtonElement: PropTypes.element,\n    textareaElementGenerator: PropTypes.func.isRequired,\n    minusMenuElement: PropTypes.element,\n    logger: PropTypes.object.isRequired,\n    onSubmitValueParser: PropTypes.func.isRequired,\n};\n// Default props\nconst defaultProps = {\n    keyPath: [],\n    deep: 0,\n    handleUpdateValue: () => {\n    },\n    editButtonElement: <button>e</button>,\n    cancelButtonElement: <button>c</button>,\n    minusMenuElement: <span> - </span>,\n};\n\n/* ************************************* */\n/* ********      COMPONENT      ******** */\n/* ************************************* */\nclass JsonFunctionValue extends Component {\n    constructor(props) {\n        super(props);\n        const keyPath = [\n            ...props.keyPath,\n            props.name,\n        ];\n        this.state = {\n            value: props.value,\n            name: props.name,\n            keyPath,\n            deep: props.deep,\n            editEnabled: false,\n            inputRef: null,\n        };\n\n        // Bind\n        this.handleEditMode = this.handleEditMode.bind(this);\n        this.refInput = this.refInput.bind(this);\n        this.handleCancelEdit = this.handleCancelEdit.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.value,\n        });\n    }\n\n    componentDidUpdate() {\n        const { editEnabled, inputRef, name, value, keyPath, deep } = this.state;\n        const { readOnly, dataType } = this.props;\n        const readOnlyResult = readOnly(name, value, keyPath, deep, dataType);\n\n        if (editEnabled && !readOnlyResult && (typeof inputRef.focus === 'function')) {\n            inputRef.focus();\n        }\n    }\n\n    handleEdit() {\n        const { handleUpdateValue, originalValue, logger, onSubmitValueParser, keyPath } = this.props;\n        const { inputRef, name, deep } = this.state;\n\n        const newValue = onSubmitValueParser(true, keyPath, deep, name, inputRef.value);\n\n        const result = {\n            value: newValue,\n            key: name,\n        };\n\n        // Run update\n        handleUpdateValue(result).then(() => {\n            // Cancel edit mode if necessary\n            if (!isComponentWillChange(originalValue, newValue)) {\n                this.handleCancelEdit();\n            }\n        }).catch(logger.error);\n    }\n\n    handleEditMode() {\n        this.setState({\n            editEnabled: true,\n        });\n    }\n\n    refInput(node) {\n        this.state.inputRef = node;\n    }\n\n    handleCancelEdit() {\n        this.setState({\n            editEnabled: false,\n        });\n    }\n\n    render() {\n        const { name, value, editEnabled, keyPath, deep } = this.state;\n        const {\n            handleRemove,\n            originalValue,\n            readOnly,\n            dataType,\n            getStyle,\n            editButtonElement,\n            cancelButtonElement,\n            textareaElementGenerator,\n            minusMenuElement,\n            keyPath: comeFromKeyPath,\n            } = this.props;\n\n        const hotkeys = {\n            Escape: this.handleCancelEdit,\n            Enter: this.handleEdit,\n        };\n\n        const style = getStyle(name, originalValue, keyPath, deep, dataType);\n        let result = null;\n        let minusElement = null;\n        const resultOnlyResult = readOnly(name, originalValue, keyPath, deep, dataType);\n\n        if (editEnabled && !resultOnlyResult) {\n            const textareaElement =\n                textareaElementGenerator(inputUsageTypes.VALUE, comeFromKeyPath, deep, name, originalValue, dataType);\n\n            const editButtonElementLayout = React.cloneElement(editButtonElement, {\n                onClick: this.handleEdit,\n            });\n            const cancelButtonElementLayout = React.cloneElement(cancelButtonElement, {\n                onClick: this.handleCancelEdit,\n            });\n            const textareaElementLayout = React.cloneElement(textareaElement, {\n                ref: this.refInput,\n                defaultValue: functionToString(originalValue),\n                onKeyUp: handleHotkeys(hotkeys),\n            });\n\n            result = (<span className=\"rejt-edit-form\" style={style.editForm}>\n                {textareaElementLayout} {cancelButtonElementLayout}{editButtonElementLayout}\n            </span>);\n            minusElement = null;\n        } else {\n            /* eslint-disable jsx-a11y/no-static-element-interactions */\n            result = (\n                <span\n                    className=\"rejt-value\" style={style.value} onClick={resultOnlyResult ? null : this.handleEditMode}\n                >\n                    {value}\n                </span>\n            );\n            /* eslint-enable */\n            const minusMenuLayout = React.cloneElement(minusMenuElement, {\n                onClick: handleRemove,\n                className: 'rejt-minus-menu',\n                style: style.minus,\n            });\n            minusElement = (resultOnlyResult) ? null : minusMenuLayout;\n        }\n\n        return (\n            <li className=\"rejt-function-value-node\" style={style.li}>\n                <span className=\"rejt-name\" style={style.name}>{name} : </span>{result}\n                {minusElement}\n            </li>\n        );\n    }\n}\n\n// Add prop types\nJsonFunctionValue.propTypes = propTypes;\n// Add default props\nJsonFunctionValue.defaultProps = defaultProps;\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport default JsonFunctionValue;\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 22/10/16\n * Licence: See Readme\n */\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\n\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\n\nconst basicFunctionPattern = new RegExp(\n    // eslint-disable-next-line prefer-template\n    ''\n    + /^function/.source\n    + / *([$_a-zA-Z][$\\w]*)?/.source // name\n    + / *\\([ \\n]*([$_a-zA-Z][$\\w]*(?:[ \\n]*,[ \\n]*[$_a-zA-Z][$\\w]*)*)*?,?[ \\n]*\\)/.source // params\n    + /[ \\n]*{\\n*(.*?)\\n? *}$/.source, // body\n    's',\n);\n\n/* ************************************* */\n/* ********  PRIVATE FUNCTIONS  ******** */\n/* ************************************* */\n\n/**\n * Try to regex match a string as a javascript function.\n * @param functionString {string} string to match\n * @param splitParams {boolean} whether to split parameters into an array\n * @returns {{name: string, params: string | string[], body: string} | null}\n */\nfunction matchFunction(functionString, splitParams = false) {\n    const match = basicFunctionPattern.exec(functionString);\n    if (match === null) return null;\n    return {\n        name: match[1],\n        params: splitParams ? commaSplit(match[2]) : match[2],\n        body: match[3],\n    };\n}\n\n/**\n * Split comma separated strings and trim surrounding whitespace.\n * @param string {string | undefined} a string of comma-separated strings\n * @returns {string[]} an array of elements that were separated by commas with\n *   surrounding whitespace trimmed. May be empty.\n */\nfunction commaSplit(string) {\n    if (!string) return [];\n    return string.split(',').map(x => x.trim());\n}\n\n/**\n * Try creating an anonymous function from a string, or return null if it's\n * not a valid function definition.\n * Note that this is not a completely safe, there are still security flaws,\n * but it is safer than using `exec`.\n * @param functionString {string} string to try to parse as a function\n *   definition\n * @returns {Function | null} an anonymous function if the string is a valid\n *   function definition, else null\n */\nfunction createFunction(functionString) {\n    /* This is not an exhaustive check by any means\n     * For instance, function names may have a wide variety of\n     * unicode characters and still be valid... oh well!\n     *\n     * TEST CASES:\n     *\n     * // Should match (single-line):\n     * function() {}\n     * function () {}\n     * function myFunc(){}\n     * function myFunc(arg1){}\n     * function(arg1,arg2, arg3,  arg4) {}\n     * function myFunc(arg1, arg2, arg3){}\n     * function myFunc(arg1, arg2, arg3){console.log('something');}\n     * function myFunc(arg1,){}\n     * function myFunc(arg1, ){}\n     * function myFunc(arg1) {if (true) {var moreCurlyBraces = 1;}}\n     *\n     * // Should match (multi-line):\n     * function myFunc(arg1, arg2, arg3) {\n     *     console.log('something');\n     * }\n     *\n     * function myFunc() {\n     *     console.log('test');\n     *     if (true) {\n     *         console.log('test2');\n     *     }\n     * }\n     *\n     * // Should not match (single-line):\n     * anotherFunction()\n     * function myFunc {}\n     * function myFunc()); (anotherFunction()\n     * function myFunc(){}, anotherFunction()\n     */\n    const match = matchFunction(functionString, true);\n    if (!match) return null;\n\n    // Here's the security flaw. We want this functionality for supporting\n    // JSONP, so we've opted for the best attempt at maintaining some amount\n    // of security. This should be a little better than eval because it\n    // shouldn't automatically execute code, just create a function which can\n    // be called later.\n    // eslint-disable-next-line no-new-func\n    const func = new Function(...match.params, match.body || '');\n    func.displayName = match.name;\n    return func;\n}\n\n\n/* ************************************* */\n/* ********   PUBLIC FUNCTIONS  ******** */\n/* ************************************* */\n\n/**\n * Parse a string into either a function or a JSON element.\n * @param string {string} string to parse\n * @param allowFunctionEvaluation {boolean} whether to parse strings that\n *   are function definitions as Javascript\n * @returns {Function | Object | Array | null | boolean | number | string}\n */\nfunction parse(string, allowFunctionEvaluation) {\n    // Try parsing (and sanitizing) a function\n    if (allowFunctionEvaluation) {\n        const func = createFunction(string);\n        if (func !== null) return func;\n    }\n\n    try {\n        return JSON.parse(string);\n    } catch (e) {\n        return string;\n    }\n}\n\n/**\n * A different implementation of Function.prototype.toString which tries to get\n * a function name using displayName when name is \"anonymous\".\n * @param func {Function} function to transform into a string\n * @returns {string} a string representing the function\n */\nfunction functionToString(func) {\n    const pattern = /^function anonymous/;\n    const funcStr = func.toString();\n    if (pattern.test(funcStr) && func.displayName) {\n        return func.toString().replace(pattern, `function ${func.displayName}`);\n    }\n    return funcStr;\n}\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport default parse;\nexport { functionToString };\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 27/02/18\n * Licence: See Readme\n */\n\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\nconst ERROR = 'Error';\nconst OBJECT = 'Object';\nconst ARRAY = 'Array';\nconst STRING = 'String';\nconst NUMBER = 'Number';\nconst BOOLEAN = 'Boolean';\nconst DATE = 'Date';\nconst NULL = 'Null';\nconst UNDEFINED = 'Undefined';\nconst FUNCTION = 'Function';\nconst SYMBOL = 'Symbol';\n\n/* ************************************* */\n/* ********       CLASSES       ******** */\n/* ************************************* */\n\n/* ************************************* */\n/* ********  PRIVATE FUNCTIONS  ******** */\n/* ************************************* */\n\n/* ************************************* */\n/* ********   PUBLIC FUNCTIONS  ******** */\n/* ************************************* */\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport default {\n    ERROR,\n    OBJECT,\n    ARRAY,\n    STRING,\n    NUMBER,\n    BOOLEAN,\n    DATE,\n    NULL,\n    UNDEFINED,\n    FUNCTION,\n    SYMBOL,\n};\n","/*\n * Author: Alexandre Havrileck (Oxyno-zeta)\n * Date: 20/10/16\n * Licence: See Readme\n */\n/* ************************************* */\n/* ********       IMPORTS       ******** */\n/* ************************************* */\n\n\n/* ************************************* */\n/* ********      VARIABLES      ******** */\n/* ************************************* */\n\nconst object = {\n    minus: {\n        color: 'red',\n    },\n    plus: {\n        color: 'green',\n    },\n    collapsed: {\n        color: 'grey',\n    },\n    delimiter: {},\n    ul: {\n        padding: '0px',\n        margin: '0 0 0 25px',\n        listStyle: 'none',\n    },\n    name: {\n        color: '#2287CD',\n    },\n    addForm: {},\n};\nconst array = {\n    minus: {\n        color: 'red',\n    },\n    plus: {\n        color: 'green',\n    },\n    collapsed: {\n        color: 'grey',\n    },\n    delimiter: {},\n    ul: {\n        padding: '0px',\n        margin: '0 0 0 25px',\n        listStyle: 'none',\n    },\n    name: {\n        color: '#2287CD',\n    },\n    addForm: {},\n};\nconst value = {\n    minus: {\n        color: 'red',\n    },\n    editForm: {},\n    value: {\n        color: '#7bba3d',\n    },\n    li: {\n        minHeight: '22px',\n        lineHeight: '22px',\n        outline: '0px',\n    },\n    name: {\n        color: '#2287CD',\n    },\n};\n\n/* ************************************* */\n/* ********       EXPORTS       ******** */\n/* ************************************* */\nexport { object };\nexport { array };\nexport { value };\n"],"names":[],"version":3,"file":"JsonTree.esm.js.map"}